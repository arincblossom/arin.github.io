{"version":3,"sources":["page/landing/landing.tsx","tool/language.ts","page/fixedTop.tsx","page/fixedBottom.tsx","text/about.ts","page/profile/techStackCard.tsx","data/techStackData.ts","page/profile/profile.tsx","data/projectItem.ts","data/projPersonal.ts","data/projNonPersonal.ts","text/project.ts","page/project/projectListObject.tsx","page/project/projectListWrapper.tsx","page/project/project.tsx","page/experience.tsx","page/link/link.tsx","page/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Landing","className","Container","Row","id","Col","xs","animation","delay","icon","faAngleDoubleDown","Component","Language","lang","navigator","language","this","readCookie","eraseCookie","createCookie","type","window","location","reload","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","FixedTop","props","state","isOpen","toggle","bind","setState","Navbar","fixed","NavbarBrand","Nav","NavItem","NavLink","href","Dropdown","nav","DropdownToggle","onClick","DropdownMenu","DropdownItem","changeLang","disabled","style","color","FixedBottom","position","bottom","right","textAlign","fontSize","textAbout","para1t","para1c","para2t","para2c","para3t","para3c1","para3c2","TechStackCard","Card","CardHeader","title","CardBody","cont","map","v","content","techStack","About","key","dangerouslySetInnerHTML","__html","d","sm","md","ProjectItem","simpledesc","platform","tech","period","link","link2","link3","dev","image","link1","projPersonal","projNonPersonal","textProject","ProjectListObject","getLang","changeOpen","render","item","alt","src","display","target","rel","e","imgUrl","ProjectListWrapper","list","ProjectPage","catName","catSize","catList","Array","ppList","npList","catCurNum","catPage","updateCatNum","moveProject","loadProjectList","moduleName","m","size","plist","nlist","forEach","push","generateItemObject","num","idx","nextidx","catlen","tabs","TabContent","activeTab","TabPane","tabId","Experience","Link","Index","App","Boolean","hostname","match","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"0bAsCeA,E,iLA7BP,OACI,yBAAKC,UAAU,cACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKF,UAAU,yBAAyBG,GAAG,WACvC,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACH,EAAA,EAAD,CAAKF,UAAU,aACX,kBAAC,IAAD,CAAUM,UAAU,aAAaC,MAAM,QACnC,kBAACH,EAAA,EAAD,CAAKJ,UAAU,iBAAiBK,GAAG,MAC/B,0BAAML,UAAU,OAAhB,gBAAyC,6BACzC,0BAAMA,UAAU,OAAhB,uBAAgD,6BAChD,0BAAMA,UAAU,OAAhB,oCAIZ,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAUI,UAAU,aAAaC,MAAM,MACnC,kBAACH,EAAA,EAAD,CAAKJ,UAAU,mCAAmCK,GAAG,MACjD,kBAAC,IAAD,CAAiBG,KAAMC,iB,GAnBzCC,a,+ECmDPC,G,6GAxDP,IAAIC,EAAOC,UAAUC,SAoBrB,OAnB+B,OAA5BC,KAAKC,WAAW,SACc,OAA5BD,KAAKC,WAAW,SAAgD,OAA5BD,KAAKC,WAAW,SAAgD,OAA5BD,KAAKC,WAAW,SAMrFJ,EADM,OAAPA,GAAsB,UAAPA,GAAyB,UAAPA,EACzB,KAEI,OAAPA,GAAsB,UAAPA,GAAyB,UAAPA,EAC9B,KAGA,KAGXG,KAAKE,YAAY,QACjBF,KAAKG,aAAa,OAAQN,EAAM,IAdhCA,EAAOG,KAAKC,WAAW,QAgBpBJ,I,iCAGOO,GACdJ,KAAKE,YAAY,QACjBF,KAAKG,aAAa,OAAQC,EAAM,GAChCC,OAAOC,SAASC,W,mCAGAC,EAAcC,EAAeC,GAC7C,IAAIC,EAAU,GACd,GAAID,EAAM,CACN,IAAME,EAAO,IAAIC,KACjBD,EAAKE,QAAQF,EAAKG,UAAgB,GAALL,EAAQ,GAAG,GAAG,KAC3CC,EAAU,aAAaC,EAAKI,mBAE3BL,EAAU,GACfM,SAASC,OAASV,EAAK,IAAIC,EAAME,EAAQ,a,iCAG3BH,GAGd,IAFA,IAAMW,EAASX,EAAO,IAChBY,EAAKH,SAASC,OAAOG,MAAM,KACzBC,EAAE,EAAEA,EAAIF,EAAGG,OAAOD,IAAK,CAE3B,IADA,IAAIE,EAAIJ,EAAGE,GACU,MAAdE,EAAEC,OAAO,IAAUD,EAAIA,EAAEE,UAAU,EAAEF,EAAED,QAC9C,GAA0B,IAAtBC,EAAEG,QAAQR,GAAe,OAAOK,EAAEE,UAAUP,EAAOI,OAAOC,EAAED,QAEpE,OAAO,O,kCAGQf,GACfR,KAAKG,aAAaK,EAAK,IAAI,O,MCoBpBoB,E,YA/DX,WAAYC,GAAW,IAAD,8BAClB,4CAAMA,KAGVC,MAAe,CACXC,QAAQ,GAHR,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBAFI,E,sEASlBjC,KAAKkC,SAAS,CACVH,QAAS/B,KAAK8B,MAAMC,W,+BAKxB,OACI,kBAACI,EAAA,EAAD,CAAQlD,UAAU,cAAcmD,MAAM,OAClC,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,KAAK,WACVxD,UAAU,aADd,UAKJ,kBAACsD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,KAAK,SACVxD,UAAU,aADd,UAKJ,kBAACsD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASC,KAAK,QACVxD,UAAU,aADd,SAKJ,kBAACyD,EAAA,EAAD,CAAUC,KAAG,EAACZ,OAAQ/B,KAAK8B,MAAMC,QAC7B,kBAACa,EAAA,EAAD,CAAgBD,KAAG,EAACE,QAAS7C,KAAKgC,OAC9B/C,UAAU,aADd,YAIA,kBAAC6D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIF,QAAS,kBAAMjD,EAASoD,WAAW,QADvC,sBAIA,kBAACD,EAAA,EAAD,CAAcE,UAAQ,EAACC,MAAO,CAACC,MAAM,aACjCN,QAAS,kBAAMjD,EAASoD,WAAW,QADvC,sBAIA,kBAACD,EAAA,EAAD,CAAcE,UAAQ,EAACC,MAAO,CAACC,MAAM,aACjCN,QAAS,kBAAMjD,EAASoD,WAAW,QADvC,mB,GApDLrD,aCYRyD,E,iLAlBP,OACI,4BAAQnE,UAAU,SACdiE,MAAO,CACHG,SAAS,QACTC,OAAO,OACPC,MAAM,OACNC,UAAU,QACVL,MAAO,OACPM,SAAU,QAPlB,uBAUwB,6BAVxB,2B,GAHc9D,aC6CX+D,G,MA/CG,CACdC,OAAQ,CACJ,GAAK,eACL,GAAK,QACL,GAAK,SAETC,OAAQ,CACJ,GAAK,qnCAKL,GAAK,8NACL,GAAK,IAETC,OAAQ,CACJ,GAAK,wEACL,GAAK,6CACL,GAAK,oBAETC,OAAQ,CACJ,GAAK,8HACL,GAAK,sIACL,GAAK,+CAETC,OAAQ,CACJ,GAAK,mCACL,GAAK,uCACL,GAAK,oBAETC,QAAS,CACL,GAAK,uVAIL,GAAK,gBACL,GAAK,iBAETC,QAAS,CACL,GAAK,wSAGL,GAAK,GACL,GAAK,gI,wBCVEC,E,iLAtBP,OACI,kBAACC,EAAA,EAAD,CAAMlF,UAAU,iBACZ,kBAACmF,EAAA,EAAD,CAAYnF,UAAU,kBACjBe,KAAK6B,MAAMwC,OAEhB,kBAACC,EAAA,EAAD,KAEQtE,KAAK6B,MAAM0C,KAAKC,KAAI,SAAAC,GAChB,OACI,0BAAMxF,UAAU,OACZ,2BAAIwF,EAAEJ,OAAU,6BACfI,EAAEC,QAAQ,uC,GAbnB/E,aCyDbgF,EAlEC,CACZ,CACIN,MAAO,MACPE,KAAM,CACF,CACIF,MAAO,WACPK,QAAQ,2FAGZ,CACIL,MAAO,UACPK,QAAQ,oHAGZ,CACIL,MAAO,iBACPK,QAAQ,sQAKpB,CACIL,MAAO,cACPE,KAAM,CACF,CACIF,MAAO,WACPK,QAAS,gBAEb,CACIL,MAAO,iBACPK,QAAS,uJAIrB,CACIL,MAAO,QACPE,KAAM,CACF,CACIF,MAAO,WACPK,QAAS,MAEb,CACIL,MAAO,iBACPK,QAAS,qEAIrB,CACIL,MAAO,MACPE,KAAM,CACF,CACIF,MAAO,qBACPK,QAAS,6BAEb,CACIL,MAAO,gBACPK,QAAS,gCAEb,CACIL,MAAO,SACPK,QAAS,8BC+BVE,E,2MAlFH/E,KAAO,K,wEAGX,OACI,yBAAKZ,UAAU,cACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKF,UAAU,OAAOG,GAAG,WACrB,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACH,EAAA,EAAD,CAAKF,UAAU,aACX,kBAAC,IAAD,CACI4F,IAAI,WACJtF,UAAU,eACV,kBAACF,EAAA,EAAD,CAAKJ,UAAU,iBAAiBK,GAAG,MAC/B,0BAAML,UAAU,OAAhB,YAIZ,kBAACE,EAAA,EAAD,CAAKF,UAAU,aACX,kBAAC,IAAD,CACI4F,IAAI,WACJtF,UAAU,eACV,kBAACF,EAAA,EAAD,CAAKJ,UAAU,OAAOK,GAAG,MACrB,0BAAML,UAAU,OAAQyE,EAAUC,OAAe3D,KAAKH,OAAa,6BACnE,0BAAMZ,UAAU,MAAM6F,wBAAyB,CAACC,OAASrB,EAAUE,OAAe5D,KAAKH,YAInG,kBAACV,EAAA,EAAD,CAAKF,UAAU,aACX,kBAAC,IAAD,CACI4F,IAAI,WACJtF,UAAU,eACV,kBAACF,EAAA,EAAD,CAAKJ,UAAU,OAAOK,GAAG,MACrB,0BAAML,UAAU,OAAQyE,EAAUG,OAAe7D,KAAKH,OAAa,6BACnE,0BAAMZ,UAAU,OAAQyE,EAAUI,OAAe9D,KAAKH,UAIlE,kBAACV,EAAA,EAAD,CAAKF,UAAU,aAEP0F,EAAUH,KAAI,SAACQ,EAAG1D,GACd,OACI,kBAAC,IAAD,CACIuD,IAAK,WAAWvD,EAChB/B,UAAU,eACV,kBAACF,EAAA,EAAD,CAAKJ,UAAU,OAAOgG,GAAG,KAAKC,GAAG,KAC7B,kBAAC,EAAD,CACIb,MAAOW,EAAEX,MACTE,KAAMS,EAAET,aAQpC,kBAACpF,EAAA,EAAD,CAAKF,UAAU,aACX,kBAAC,IAAD,CACI4F,IAAI,WACJtF,UAAU,eACV,kBAACF,EAAA,EAAD,CAAKJ,UAAU,OAAOK,GAAG,MACrB,0BAAML,UAAU,OAAQyE,EAAUK,OAAe/D,KAAKH,OAAa,6BAAK,6BACxE,0BAAMZ,UAAU,OAAM,8CAAsB,6BACxC,0BAAM6F,wBACF,CAACC,OAAQrB,EAAUM,QAAgBhE,KAAKH,UAEzC,6BAAK,6BACZ,0BAAMZ,UAAU,OAAM,8CAAsB,6BACxC,0BAAM6F,wBACF,CAACC,OAAQrB,EAAUO,QAAgBjE,KAAKH,qB,GArEpEF,a,gBCkCLwF,EA5BX,WACI1F,EACA4E,EACAe,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAhB,EACAiB,EACAC,GAAuB,yBAzB3BnG,UAyB0B,OAxB1B4E,WAwB0B,OAvB1Be,gBAuB0B,OAtB1BC,cAsB0B,OArB1BC,UAqB0B,OApB1BC,YAoB0B,OAnB1BM,WAmB0B,OAlB1BJ,WAkB0B,OAjB1BC,WAiB0B,OAhB1BhB,aAgB0B,OAf1BiB,SAe0B,OAd1BC,WAc0B,EAClB5F,KAAKP,KAAOA,EACZO,KAAKqE,MAAQA,EACbrE,KAAKoF,WAAaA,EAClBpF,KAAKqF,SAAWA,EAChBrF,KAAKsF,KAAOA,EACZtF,KAAKuF,OAASA,EACdvF,KAAK6F,MAAQL,EACbxF,KAAKyF,MAAQA,EACbzF,KAAK0F,MAAQA,EACb1F,KAAK0E,QAAUA,EACf1E,KAAK2F,IAAMA,EACX3F,KAAK4F,MAAQA,GCoNVE,EA1PM,CACjB,CACIrG,KAAM,4BACN4E,MAAO,CACH,GAAK,yCACL,GAAK,GACL,GAAK,oBAETe,WAAY,CACR,GAAK,gKACL,GAAK,GACL,GAAK,IAETC,SAAU,MACVC,KAAM,0CACNC,OAAQ,oCACRM,MAAO,2BACPJ,MAAO,iDACPC,MAAO,+BACPhB,QAAS,CACL,GAAK,sRAIL,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,kZAKL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,4BAGR,CACInG,KAAM,wBACN4E,MAAO,CACH,GAAK,kBACL,GAAK,kBACL,GAAK,mBAETe,WAAY,CACR,GAAK,0GACL,GAAK,GACL,GAAK,IAETC,SAAU,MACVC,KAAM,kEACNC,OAAQ,WACRM,MAAO,uBACPJ,MAAO,6CACPC,MAAO,8CACPhB,QAAS,CACL,GAAK,gdAKL,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,4ZAML,GAAK,GACL,GAAK,IAETC,MAAO,CACH,sBAAuB,wBAG/B,CACInG,KAAM,wBACN4E,MAAO,CACH,GAAK,uCACL,GAAK,iDACL,GAAK,eAETe,WAAY,CACR,GAAK,yFACL,GAAK,GACL,GAAK,IAETC,SAAU,MACVC,KAAM,mFACNC,OAAQ,WACRM,MAAO,uBACPJ,MAAO,2CACPC,MAAO,GACPhB,QAAS,CACL,GAAK,g1BAML,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,yUASL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,sBAAuB,wBAG/B,CACInG,KAAM,2BACN4E,MAAO,CACH,GAAK,6BACL,GAAK,6BACL,GAAK,8BAETe,WAAY,CACR,GAAK,wDACL,GAAK,GACL,GAAK,IAETC,SAAU,oBACVC,KAAM,UACNC,OAAQ,WACRM,MAAO,+BACPJ,MAAO,8CACPC,MAAO,GACPhB,QAAS,CACL,GAAK,+OAIL,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,6kBAKL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,yBAA0B,yBAC1B,2BAGR,CACInG,KAAM,6BACN4E,MAAO,CACH,GAAK,wCACL,GAAK,mBACL,GAAK,oBAETe,WAAY,CACR,GAAK,iIACL,GAAK,GACL,GAAK,IAETC,SAAU,oBACVC,KAAM,yBACNC,OAAQ,mBACRM,MAAO,kEACPJ,MAAO,gDACPC,MAAO,GACPhB,QAAS,CACL,GAAK,0qBAML,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,+OAIL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,2BAA4B,2BAC5B,2BAA4B,2BAC5B,6BAGR,CACInG,KAAM,6BACN4E,MAAO,CACH,GAAK,mBACL,GAAK,mBACL,GAAK,oBAETe,WAAY,CACR,GAAK,uGACL,GAAK,GACL,GAAK,IAETC,SAAU,UACVC,KAAM,iBACNC,OAAQ,kBACRM,MAAO,6EACPJ,MAAO,gDACPC,MAAO,GACPhB,QAAS,CACL,GAAK,+PAIL,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,uaAKL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,2BAA4B,2BAC5B,2BAA4B,8BCwBzBG,EA7QS,CACpB,CACItG,KAAM,4BACN4E,MAAO,CACH,GAAK,kDACL,GAAK,GACL,GAAK,IAETe,WAAY,CACR,GAAK,wEACL,GAAK,GACL,GAAK,IAETC,SAAU,gBACVC,KAAM,oDACNC,OAAQ,kBACRM,MAAO,qEACPJ,MAAO,gCACPC,MAAO,GACPhB,QAAS,CACL,GAAK,kpBAKL,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,4FACL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,0BAA2B,0BAC3B,0BAA2B,4BAGnC,CACInG,KAAM,2BACN4E,MAAO,CACH,GAAK,8EACL,GAAK,GACL,GAAK,IAETe,WAAY,CACR,GAAK,sHACL,GAAK,GACL,GAAK,IAETC,SAAU,MACVC,KAAM,mCACNC,OAAQ,kBACRM,MAAO,GACPJ,MAAO,GACPC,MAAO,GACPhB,QAAS,CACL,GAAK,otBAKL,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,6SAIL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,yBAA0B,2BAGlC,CACInG,KAAM,8BACN4E,MAAO,CACH,GAAK,yHACL,GAAK,kBACL,GAAK,sDAETe,WAAY,CACR,GAAK,2HACL,GAAK,GACL,GAAK,IAETC,SAAU,gBACVC,KAAM,+BACNC,OAAQ,OACRM,MAAO,2HACPJ,MAAO,GACPC,MAAO,GACPhB,QAAS,CACL,GAAK,yyBAML,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,kgCASL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,4BAA6B,4BAC7B,4BAA6B,8BAGrC,CACInG,KAAM,2BACN4E,MAAO,CACH,GAAK,qCACL,GAAK,qDACL,GAAK,2BAETe,WAAY,CACR,GAAK,wEACL,GAAK,GACL,GAAK,IAETC,SAAU,OACVC,KAAM,GACNC,OAAQ,gBACRM,MAAO,wFACPJ,MAAO,GACPC,MAAO,GACPhB,QAAS,CACL,GAAK,44CAgBL,GAAK,mKACL,GAAK,IAETiB,IAAK,CACD,GAAK,uBACL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,yBAA0B,yBAC1B,yBAA0B,yBAC1B,2BAGR,CACInG,KAAM,2BACN4E,MAAO,CACH,GAAK,qEACL,GAAK,mCACL,GAAK,uBAETe,WAAY,CACR,GAAK,sHACL,GAAK,GACL,GAAK,IAETC,SAAU,QACVC,KAAM,QACNC,OAAQ,gBACRM,MAAO,uDACPJ,MAAO,GACPC,MAAO,GACPhB,QAAS,CACL,GAAK,yiBAKL,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,sqBAUL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,yBAA0B,yBAC1B,2BAGR,CACInG,KAAM,8BACN4E,MAAO,CACH,GAAK,wDACL,GAAK,iEACL,GAAK,8BAETe,WAAY,CACR,GAAK,GACL,GAAK,GACL,GAAK,IAETC,SAAU,QACVC,KAAM,QACNC,OAAQ,iBACRM,MAAO,uDACPJ,MAAO,kEACPC,MAAO,GACPhB,QAAS,CACL,GAAK,+kCAOL,GAAK,GACL,GAAK,IAETiB,IAAK,CACD,GAAK,m6BAWL,GAAK,GACL,GAAK,IAETC,MAAO,CACH,4BAA6B,4BAC7B,+BCjPGI,G,MAvBK,CAChBX,SAAU,CACN,GAAK,qBACL,GAAK,mDACL,GAAK,YAETC,KAAM,CACF,GAAK,4BACL,GAAK,qBACL,GAAK,SAETC,OAAQ,CACJ,GAAK,eACL,GAAK,2BACL,GAAK,UAETI,IAAK,CACD,GAAK,eACL,GAAK,2BACL,GAAK,iBCyJEM,E,YA3JX,WAAYpE,GAAe,IAAD,8BACtB,4CAAMA,KAHFhC,KAAOD,EAASsG,UAEE,EAK1BpE,MAAe,CACXC,QAAQ,GANc,EAS1BoE,WAAa,WACT,EAAKjE,SAAS,CACVH,QAAS,EAAKD,MAAMC,UAXF,EAe1BqE,OAAS,WACL,IAAMC,EAAO,EAAKxE,MAAMwE,KACxB,OACI,kBAAC,WAAD,KACI,kBAAClH,EAAA,EAAD,CAAKF,UAAU,mBACX,kBAACI,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACH,EAAA,EAAD,CAAK0D,QAAS,EAAKsD,YACf,kBAAC9G,EAAA,EAAD,CAAKC,GAAG,KACJ,yBACIgH,IAAI,OACJrH,UAAU,eACVsH,IAA4B,OAAOF,EAAK5G,QAEhD,kBAACJ,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACH,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,IAAIL,UAAU,iBACjBoH,EAAKhC,OAEV,kBAAChF,EAAA,EAAD,CAAKC,GAAG,KACH+G,EAAKhB,WAGd,kBAAClG,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,MACH+G,EAAKjB,eAKtB,kBAACjB,EAAA,EAAD,CAAMjB,MACF,EAAKpB,MAAMC,OACX,CACIyE,QAAS,SAGb,CACIA,QAAS,SAGb,kBAAClC,EAAA,EAAD,CAAUrF,UAAU,YAChB,kBAACE,EAAA,EAAD,CAAKF,UAAU,aACX,kBAACI,EAAA,EAAD,CAAKC,GAAG,IAAIL,UAAU,QAClB,2BAAK+G,EAAYX,SAAiB,EAAKxF,OAAU,6BACjD,0BAAMZ,UAAU,OAAOoH,EAAKhB,WAEhC,kBAAChG,EAAA,EAAD,CAAKC,GAAG,IAAIL,UAAU,QAClB,2BAAK+G,EAAYT,OAAe,EAAK1F,OAAU,6BAC/C,0BAAMZ,UAAU,OAAOoH,EAAKd,UAGpC,kBAACpG,EAAA,EAAD,CAAKF,UAAU,aACX,kBAACI,EAAA,EAAD,CAAKJ,UAAU,QACX,2BAAK+G,EAAYV,KAAa,EAAKzF,OAAU,6BAC7C,0BAAMZ,UAAU,OAAOoH,EAAKf,QAGpC,kBAACnG,EAAA,EAAD,CAAKF,UAAU,aACX,kBAACI,EAAA,EAAD,CAAKJ,UAAU,QACX,qCADJ,OAGI,0BAAMA,UAAU,OACZ,uBACI4F,IAAI,QACJ4B,OAAO,SACPC,IAAI,sBACJjE,KAAM4D,EAAKR,OACVQ,EAAKR,QAEP,6BACP,qCAZJ,OAcI,0BAAM5G,UAAU,OACZ,uBACI4F,IAAI,QACJ4B,OAAO,SACPC,IAAI,sBACJjE,KAAM4D,EAAKZ,OACVY,EAAKZ,QAEP,6BACP,qCAvBJ,OAyBI,0BAAMxG,UAAU,OACZ,uBACI4F,IAAI,QACJ4B,OAAO,SACPC,IAAI,sBACJjE,KAAM4D,EAAKX,OACVW,EAAKX,QAEP,+BAGf,kBAACvG,EAAA,EAAD,CAAKF,UAAU,aACX,kBAACI,EAAA,EAAD,CAAKJ,UAAU,QACX,0BAAMA,UAAU,MAAM6F,wBAAyB,CAACC,OAAOsB,EAAK3B,aAGpE,kBAACvF,EAAA,EAAD,CAAKF,UAAU,aACX,kBAACI,EAAA,EAAD,CAAKJ,UAAU,QACX,2BAAK+G,EAAYL,IAAY,EAAK9F,OAAU,6BAC5C,0BAAMZ,UAAU,MAAM6F,wBAAyB,CAACC,OAAOsB,EAAKV,SAGpE,kBAACxG,EAAA,EAAD,CAAKF,UAAU,aACX,kBAACI,EAAA,EAAD,CAAKJ,UAAU,QACX,qCAAa,6BACb,0BAAMA,UAAU,OAAhB,gCAAyD,6BACzD,0BAAMA,UAAU,OAERoH,EAAKT,MAAMpB,KAAI,SAACmC,GACZ,IAAMC,EAAgC,OAAOD,EAC7C,OACI,uBACI9B,IAAK8B,EACLF,OAAO,SACPC,IAAI,sBACJjE,KAAMmE,GACN,yBAAKN,IAAI,GAAGrH,UAAU,gBAAgBsH,IAAKK,WAQvE,kBAACzH,EAAA,EAAD,CAAK0D,QAAS,EAAKsD,YACf,kBAAC9G,EAAA,EAAD,CAAKC,GAAG,KAAKL,UAAU,eACnB,uBAAGwD,KAAK,WAAR,+BA7IhC,EAAK0D,WAAa,EAAKA,WAAWlE,KAAhB,gBAFI,E,2BAHEtC,aCIjBkH,E,iLARP,OACI7G,KAAK6B,MAAMiF,KAAKtC,KAAI,SAAAC,GAChB,OAAO,kBAAC,EAAD,CAAmB4B,KAAM5B,W,GAJf9E,aC2KlBoH,E,YAxJX,WAAYlF,GAAY,IAAD,8BACnB,4CAAMA,KAHFhC,KAAeD,EAASsG,UAET,EAMvBpE,MAAe,CACXkF,QAAS,GACTC,QAAS,EACTC,QAASC,QACTC,OAAQD,QACRE,OAAQF,QACRG,UAAW,EACXC,QAAS,GAXT,EAAKC,aAAe,EAAKA,aAAavF,KAAlB,gBACpB,EAAKwF,YAAc,EAAKA,YAAYxF,KAAjB,gBAHA,E,iFAiBnBjC,KAAK0H,gBAAgB,kB,sCAITC,GAAqB,IAAD,OAEhC3H,KAAKwH,aAAa,GAElB,IAAII,EAAI,KACR,OAAOD,GACH,IAAK,eACDC,EAAI9B,EACJ,MACJ,IAAK,kBACD8B,EAAI7B,EAIZ,GAAQ,MAAL6B,EAAW,CACV,IAAMC,EAAOD,EAAErG,OACTuG,EAAQX,QACRY,EAAQZ,QAEdrB,EAAakC,SAAQ,SAAArB,GACjBmB,EAAMG,KAAK,EAAKC,mBAAmBvB,OAEvCZ,EAAgBiC,SAAQ,SAAArB,GACpBoB,EAAME,KAAK,EAAKC,mBAAmBvB,OAGvC3G,KAAKkC,SAAS,CACV8E,QAASW,EACTV,QAASY,EACTT,OAAQU,EACRT,OAAQU,O,yCAKDpB,GACf,OAAO,IAAIxB,EACPwB,EAAElH,KACDkH,EAAEtC,MAAcrE,KAAKH,MACrB8G,EAAEvB,WAAmBpF,KAAKH,MAC3B8G,EAAEtB,SACFsB,EAAErB,KACFqB,EAAEpB,OACFoB,EAAEd,MACFc,EAAElB,MACFkB,EAAEjB,MACDiB,EAAEjC,QAAgB1E,KAAKH,MACvB8G,EAAEhB,IAAY3F,KAAKH,MACpB8G,EAAEf,S,mCAGGuC,GACTnI,KAAKkC,SAAS,CACVoF,UAAWa,M,kCAIPC,GACR,IACIC,EADEC,EAAStI,KAAK8B,MAAMmF,QAGLoB,EAAlBD,EAAME,EAAS,EAAaA,EAAS,EAChCF,EAAM,EAAa,EACZA,EAEfpI,KAAKkC,SAAS,CACVoF,UAAWe,M,+BAIT,IAAD,OACL,OACI,yBAAKpJ,UAAU,cACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKF,UAAU,OAAOG,GAAG,SACrB,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACH,EAAA,EAAD,CAAKF,UAAU,aACX,kBAAC,IAAD,CAAUM,UAAU,eAChB,kBAACF,EAAA,EAAD,CAAKJ,UAAU,iBAAiBK,GAAG,MAC/B,0BAAML,UAAU,OAAhB,SAAkC,6BAClC,0BAAMA,UAAU,OAAhB,4BAKZ,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAUI,UAAU,eAChB,kBAACF,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACgD,EAAA,EAAD,CAAKiG,MAAI,GACL,kBAAChG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIvD,UAAmC,IAAvBe,KAAK8B,MAAMyF,QAAgB,SAAS,GAChD1E,QAAS,WACT,EAAKX,SAAS,CACVqF,QAAS,MAJjB,kBAUJ,kBAAChF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIvD,UAAmC,IAAvBe,KAAK8B,MAAMyF,QAAgB,SAAS,GAChD1E,QAAS,WACT,EAAKX,SAAS,CACVqF,QAAS,MAJjB,uBAWR,kBAACiB,EAAA,EAAD,CAAYC,UAAWzI,KAAK8B,MAAMyF,SAC9B,kBAACmB,EAAA,EAAD,CAASC,MAAO,GACZ,kBAAC,EAAD,CAAoB7B,KAAM9G,KAAK8B,MAAMsF,UAEzC,kBAACsB,EAAA,EAAD,CAASC,MAAO,GACZ,kBAAC,EAAD,CAAoB7B,KAAM9G,KAAK8B,MAAMuF,sB,GA7I3D1H,aCZXiJ,E,iLARP,OACI,kBAAC,WAAD,U,GAHajJ,aCqGVkJ,G,uLAhGP,OACI,yBAAK5J,UAAU,cACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKF,UAAU,OAAOG,GAAG,QACrB,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACH,EAAA,EAAD,CAAKF,UAAU,aACX,kBAAC,IAAD,CAAUM,UAAU,eAChB,kBAACF,EAAA,EAAD,CAAKJ,UAAU,iBAAiBK,GAAG,MAC/B,0BAAML,UAAU,OAAhB,YAIZ,kBAACE,EAAA,EAAD,CAAKF,UAAU,aACX,kBAAC,IAAD,CAAUM,UAAU,eAChB,kBAACF,EAAA,EAAD,CAAKC,GAAG,MACJ,kBAACH,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KAAKL,UAAU,YACnB,uCAGR,kBAACE,EAAA,EAAD,CAAKF,UAAU,eACX,kBAACI,EAAA,EAAD,CAAKC,GAAG,MACJ,uBACImH,OAAO,SACPC,IAAI,sBACJjE,KAAK,sCAHT,wCAOR,kBAACtD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KAAKL,UAAU,YACnB,yCAGR,kBAACE,EAAA,EAAD,CAAKF,UAAU,eACX,kBAACI,EAAA,EAAD,CAAKC,GAAG,MACJ,uBACImH,OAAO,SACPC,IAAI,sBACJjE,KAAK,iCAHT,mCAOR,kBAACtD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KAAKL,UAAU,YACnB,kDAGR,kBAACE,EAAA,EAAD,CAAKF,UAAU,eACX,kBAACI,EAAA,EAAD,CAAKC,GAAG,MACJ,uBACImH,OAAO,SACPC,IAAI,sBACJjE,KAAK,wBAHT,0BAOR,kBAACtD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KAAKL,UAAU,YACnB,8CAGR,kBAACE,EAAA,EAAD,CAAKF,UAAU,eACX,kBAACI,EAAA,EAAD,CAAKC,GAAG,MACJ,uBACImH,OAAO,SACPC,IAAI,sBACJjE,KAAK,wBAHT,0BAOR,kBAACtD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KAAKL,UAAU,YACnB,mDAGR,kBAACE,EAAA,EAAD,CAAKF,UAAU,eACX,kBAACI,EAAA,EAAD,CAAKC,GAAG,MACJ,uBACImH,OAAO,SACPC,IAAI,sBACJjE,KAAK,4BAHT,yC,GAhF7B9C,cCqBJmJ,E,iLAdP,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAVInJ,aCELoJ,G,kBANO,WACpB,OACE,kBAAC,EAAD,QCIgBC,QACW,cAA7B3I,OAAOC,SAAS2I,UAEe,UAA7B5I,OAAOC,SAAS2I,UAEhB5I,OAAOC,SAAS2I,SAASC,MACvB,2DCZNC,IAAS/C,OAAO,kBAAC,EAAD,MAASnF,SAASmI,eAAe,SDqI3C,kBAAmBtJ,WACrBA,UAAUuJ,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.eee62264.chunk.js","sourcesContent":["import React, {Component } from 'react';\r\nimport {Row, Col, Container} from 'reactstrap';\r\nimport ReactWOW from 'react-wow';\r\nimport \"./landing.scss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"bg-landing\">\r\n                <Container>\r\n                    <Row className=\"color-land flex-center\" id=\"landing\">\r\n                        <Col xs=\"12\">\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW animation=\"fadeInDown\" delay=\"0.5s\">\r\n                                    <Col className=\"text text-left\" xs=\"12\">\r\n                                        <span className=\"lv1\">Tae Jun Kang</span><br/>\r\n                                        <span className=\"lv3\">a developer & gamer</span><br/>\r\n                                        <span className=\"lv3\">contact: tjkang0207@gmail.com</span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row>\r\n                                <ReactWOW animation=\"fadeInDown\" delay=\"1s\">\r\n                                    <Col className=\"text text-center arrow-down-size\" xs=\"12\">\r\n                                        <FontAwesomeIcon icon={faAngleDoubleDown} />\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","class Language {\r\n    static getLang(): string {\r\n        let lang = navigator.language;// || navigator.systemLanguage;\r\n        if(this.readCookie(\"lang\") !== null &&\r\n            (this.readCookie(\"lang\") === 'ko' || this.readCookie(\"lang\") === 'jp' || this.readCookie(\"lang\") === 'en')\r\n        ) {\r\n            lang = this.readCookie(\"lang\")!;\r\n        }\r\n        else {\r\n            if(lang==='ko' || lang==='ko-kr' || lang==='ko-KR') {\r\n                lang = 'ko';\r\n            }\r\n            else if(lang==='ja' || lang==='ja-jp' || lang==='ja-JP') {\r\n                lang = 'jp';\r\n            }\r\n            else {\r\n                lang = 'en';\r\n            }\r\n        \r\n            this.eraseCookie(\"lang\");\r\n            this.createCookie(\"lang\", lang, 1);\r\n        }\r\n        return lang;\r\n    }\r\n\r\n    static changeLang(type: string) {\r\n        this.eraseCookie(\"lang\");\r\n        this.createCookie(\"lang\", type, 1);\r\n        window.location.reload();\r\n    }\r\n\r\n    static createCookie(name: string, value: string, days: number) {\r\n        let expires = \"\";\r\n        if (days) {\r\n            const date = new Date();\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            expires = \"; expires=\"+date.toUTCString();\r\n        }\r\n        else expires = \"\";\r\n        document.cookie = name+\"=\"+value+expires+\"; path=/\";\r\n    }\r\n\r\n    static readCookie(name: string) {\r\n        const nameEQ = name + \"=\";\r\n        const ca = document.cookie.split(';');\r\n        for(let i=0;i < ca.length;i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0)===' ') c = c.substring(1,c.length);\r\n            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static eraseCookie(name: string) {\r\n        this.createCookie(name,\"\",-1);\r\n    }\r\n}\r\n\r\nexport default Language;","import React, {Component} from 'react';\r\nimport {Navbar, NavItem, Nav, NavbarBrand, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\r\n\r\nimport \"./css/navbar.scss\";\r\nimport Language from '../tool/language';\r\n\r\ninterface State {\r\n    isOpen: boolean\r\n}\r\n\r\nclass FixedTop extends Component<{}, State> {\r\n    constructor(props:{}) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n    state: State = {\r\n        isOpen: false\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar className=\"transparent\" fixed=\"top\">\r\n                <NavbarBrand></NavbarBrand>\r\n                <Nav>\r\n                    <NavItem>\r\n                        <NavLink href=\"#profile\"\r\n                            className=\"nav-color\">\r\n                            About\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"#works\"\r\n                            className=\"nav-color\">\r\n                            Works\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"#link\"\r\n                            className=\"nav-color\">\r\n                            Link\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <Dropdown nav isOpen={this.state.isOpen}>\r\n                        <DropdownToggle nav onClick={this.toggle}\r\n                            className=\"nav-color\">\r\n                            Language\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            <DropdownItem\r\n                                onClick={() => Language.changeLang(\"ko\")}>\r\n                                한국어\r\n                            </DropdownItem>\r\n                            <DropdownItem disabled style={{color:\"lightgrey\"}}\r\n                                onClick={() => Language.changeLang(\"jp\")}>\r\n                                日本語\r\n                            </DropdownItem>\r\n                            <DropdownItem disabled style={{color:\"lightgrey\"}}\r\n                                onClick={() => Language.changeLang(\"en\")}>\r\n                                English\r\n                            </DropdownItem>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </Nav>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FixedTop;","import React, {Component} from 'react';\r\n\r\nclass FixedBottom extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\"\r\n                style={{\r\n                    position:\"fixed\",\r\n                    bottom:\"10px\",\r\n                    right:\"10px\",\r\n                    textAlign:\"right\",\r\n                    color: \"grey\",\r\n                    fontSize: \"80%\"\r\n                }}\r\n            >\r\n                (c) 2020 Prunus Nira<br/>\r\n                Hosted on github.io\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FixedBottom;","const textAbout = {\r\n    para1t: {\r\n        \"ko\":\"소개\",\r\n        \"jp\":\"About\",\r\n        \"en\":\"About\"\r\n    },\r\n    para1c: {\r\n        \"ko\":`개발 그 자체에 흥미를 갖고 다양한 분야에 대해 공부하고 있는 잡식 개발자입니다.<br/>\r\n                이전에는 Java/Kotlin을 이용하여 서버, 플랫폼 등의 개발을 경험했으며<br/>\r\n                현재는 JavaScript/TypeScript를 이용하여 ReactJS를 사용한 프론트엔드 개발을 하고 있습니다.<br/>\r\n                개인개발로 Android 앱을 만들거나 웹서비스를 만들기도 하였으며 현재도 서비스중입니다<br/>\r\n                이전에는 소프트웨어 공학 연구실에서 석사과정을 수학하며 소프트웨어 설계에 대해 공부하였습니다`,\r\n        \"jp\":`長くも薄広く勉強しましたが、最近はWebに興味を持っている雑食デベロッパーです`,\r\n        \"en\":``\r\n    },\r\n    para2t: {\r\n        \"ko\":\"잠깐이나마 사용해 본 것들\",\r\n        \"jp\":\"使ってみたこと\",\r\n        \"en\":\"Experienced Tech\"\r\n    },\r\n    para2c: {\r\n        \"ko\":\"자세한 포트폴리오는 아래의 Works를 참고해주세요\",\r\n        \"jp\":\"詳しいポートフォリオはWorksを参考にしてください\",\r\n        \"en\":\"Please check 'Works' for detailed portfolio\"\r\n    },\r\n    para3t: {\r\n        \"ko\":\"일 해본 경험\",\r\n        \"jp\":\"お仕事の経験\",\r\n        \"en\":\"Work Experiences\"\r\n    },\r\n    para3c1: {\r\n        \"ko\":`근무처: 한국전자인증<br/>\r\n                직종: 금융, 보안, AI<br/>\r\n                업무: R&D, 소프트웨어 개발<br/>\r\n                (석사 후 전문연구요원으로 대체 복무 진행)`,\r\n        \"jp\":\"Crosscert Inc\",\r\n        \"en\":\"Crosscert Inc\"\r\n    },\r\n    para3c2: {\r\n        \"ko\":`근무처: 부산대학교 전기전자컴퓨터공학부 소프트웨어공학 연구실<br/>\r\n            최종학력: MS. in Computer Science and Engineering<br/>\r\n            업무: R&D`,\r\n        \"jp\":\"\",\r\n        \"en\":\"Software Engineering Lab, Pusan Nat'l Univ. Electric-Electronic-Computer Engineering Dept. Majored in Computer Engineering\"\r\n    }\r\n};\r\n\r\nexport default textAbout;","import React, {Component} from 'react';\r\nimport { Card, CardHeader, CardBody } from 'reactstrap';\r\nimport \"./profile.scss\";\r\n\r\ninterface Props {\r\n    title: string,\r\n    cont: Array<any>\r\n}\r\n\r\nclass TechStackCard extends Component<Props> {\r\n    render() {\r\n        return (\r\n            <Card className=\"text techcard\">\r\n                <CardHeader className=\"lv2 profheader\">\r\n                    {this.props.title}\r\n                </CardHeader>\r\n                <CardBody>\r\n                    {\r\n                        this.props.cont.map(v => {\r\n                            return (\r\n                                <span className=\"lv3\">\r\n                                    <b>{v.title}</b><br/>\r\n                                    {v.content}<br/>\r\n                                </span>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TechStackCard;","const techStack=[\r\n    {\r\n        title: \"Web\",\r\n        cont: [\r\n            {\r\n                title: \"Frontend\",\r\n                content: `JavaScript, TypeScript, HTML, CSS, SCSS\r\n                    ReactJS, jQuery, Bootstrap`\r\n            },\r\n            {\r\n                title: \"Backend\",\r\n                content: `Spring(Java/Kotlin), NodeJS(JS/TS),\r\n                    AWS(S3/CloudFront/DynamoDB/Lambda), NGINX, CertBot, HSM`\r\n            },\r\n            {\r\n                title: \"Usage Examples\",\r\n                content: `채팅봇 프론트엔드 개발(2020), 인증서 백업 서버 개발(2020),\r\n                            개인 웹 서비스 3종 개발 및 운영중(2016~)`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Android App\",\r\n        cont: [\r\n            {\r\n                title: \"Language\",\r\n                content: \"Java, Kotlin\"\r\n            },\r\n            {\r\n                title: \"Usage Examples\",\r\n                content: \"웹 서비스용 앱 개발 (총 2종, 2020), 개인 앱 개발 및 PlayStore 게시(2013~)\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Unity\",\r\n        cont: [\r\n            {\r\n                title: \"Language\",\r\n                content: \"C#\",\r\n            },\r\n            {\r\n                title: \"Usage Examples\",\r\n                content: \"Rhythm game (BMS Player), 플러그인 개발\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"etc\",\r\n        cont: [\r\n            {\r\n                title: \"Version Management\",\r\n                content: \"GitHub, GitLab, BitBucket\"\r\n            },\r\n            {\r\n                title: \"Documentation\",\r\n                content: \"MS Office (Word, PPT, Excel)\"\r\n            },\r\n            {\r\n                title: \"Design\",\r\n                content: \"Photoshop (very simple)\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default techStack;","import React, {Component} from 'react';\r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport ReactWOW from 'react-wow';\r\nimport \"./profile.scss\";\r\nimport textAbout from '../../text/about';\r\nimport TechStackCard from './techStackCard';\r\nimport techStack from '../../data/techStackData';\r\n\r\nclass About extends Component {\r\n    private lang = \"ko\";\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"color-prof\">\r\n                <Container>\r\n                    <Row className=\"h100\" id=\"profile\">\r\n                        <Col xs=\"12\">\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW\r\n                                    key=\"profile1\"\r\n                                    animation=\"slideInLeft\">\r\n                                    <Col className=\"text text-left\" xs=\"12\">\r\n                                        <span className=\"lv1\">About</span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW\r\n                                    key=\"profile2\"\r\n                                    animation=\"slideInLeft\">\r\n                                    <Col className=\"text\" xs=\"12\">\r\n                                        <span className=\"lv2\">{(textAbout.para1t as any)[this.lang]}</span><br/>\r\n                                        <span className=\"lv3\" dangerouslySetInnerHTML={{__html: (textAbout.para1c as any)[this.lang]}}></span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW\r\n                                    key=\"profile3\"\r\n                                    animation=\"slideInLeft\">\r\n                                    <Col className=\"text\" xs=\"12\">\r\n                                        <span className=\"lv2\">{(textAbout.para2t as any)[this.lang]}</span><br/>\r\n                                        <span className=\"lv3\">{(textAbout.para2c as any)[this.lang]}</span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                {\r\n                                    techStack.map((d, i) => {\r\n                                        return (\r\n                                            <ReactWOW\r\n                                                key={\"profile4\"+i}\r\n                                                animation=\"slideInLeft\">\r\n                                                <Col className=\"text\" sm=\"12\" md=\"6\">\r\n                                                    <TechStackCard\r\n                                                        title={d.title}\r\n                                                        cont={d.cont}\r\n                                                    />\r\n                                                </Col>\r\n                                            </ReactWOW>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW\r\n                                    key=\"profile5\"\r\n                                    animation=\"slideInLeft\">\r\n                                    <Col className=\"text\" xs=\"12\">\r\n                                        <span className=\"lv2\">{(textAbout.para3t as any)[this.lang]}</span><br/><br/>\r\n                                        <span className=\"lv3\"><b>2015.05-2020.05</b><br/>\r\n                                            <span dangerouslySetInnerHTML={\r\n                                                {__html:(textAbout.para3c1 as any)[this.lang]}\r\n                                            }></span>\r\n                                        </span><br/><br/>\r\n                                        <span className=\"lv3\"><b>2013.03-2015.02</b><br/>\r\n                                            <span dangerouslySetInnerHTML={\r\n                                                {__html:(textAbout.para3c2 as any)[this.lang]}\r\n                                            }></span>\r\n                                        </span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","class ProjectItem {\r\n    icon: string;\r\n    title: string;\r\n    simpledesc: string;\r\n    platform: string;\r\n    tech: string;\r\n    period: string;\r\n    link1: string;\r\n    link2: string;\r\n    link3: string;\r\n    content: string;\r\n    dev: string;\r\n    image: Array<string>;\r\n\r\n    constructor(\r\n        icon: string,\r\n        title: string,\r\n        simpledesc: string,\r\n        platform: string,\r\n        tech: string,\r\n        period: string,\r\n        link: string,\r\n        link2: string,\r\n        link3: string,\r\n        content: string,\r\n        dev: string,\r\n        image: Array<string>) {\r\n            this.icon = icon;\r\n            this.title = title;\r\n            this.simpledesc = simpledesc;\r\n            this.platform = platform;\r\n            this.tech = tech;\r\n            this.period = period;\r\n            this.link1 = link;\r\n            this.link2 = link2;\r\n            this.link3 = link3;\r\n            this.content = content;\r\n            this.dev = dev;\r\n            this.image = image;\r\n    }\r\n}\r\n\r\nexport default ProjectItem;","const projPersonal = [\r\n    {\r\n        icon: \"/project/banpick/icon.png\",\r\n        title: {\r\n            \"ko\":\"트위치 밴픽 앱\",\r\n            \"jp\":\"\",\r\n            \"en\":\"Twitch BanPicker\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"트위치 스트리머의 컨텐츠에 활용될 수 있는 LoL 스타일 밴/픽 앱\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"ReactJS (TypeScript), bootstrap, AWS S3\",\r\n        period: \"2020.11.09~2020.11.14 (5일+@)\",\r\n        link1: \"https://banpick.nira.one\",\r\n        link2: \"https://github.com/prunusnira/twitch-banpicker\",\r\n        link3: \"https://youtu.be/t37LvUoVcFc\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>(링크3: 실제 사용 예시 영상)</li>\r\n                    <li>트위치 스트리머를 위한 LoL 스타일의 밴/픽 웹앱</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ol>\r\n                    <li>ReactJS 17.0 기반 개발</li>\r\n                    <li>AWS S3에서 배포</li>\r\n                    <li>Google Chrome 웹스토어용 앱으로도 같이 개발되었으나 서버를 S3로 옮기면서 게시하지 않음</li>\r\n                </ol>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        image: [\r\n            \"/project/banpick/01.png\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/sin/icon.png\",\r\n        title: {\r\n            \"ko\":\"Skill Navigator\",\r\n            \"jp\":\"Skill Navigator\",\r\n            \"en\":\"Skill Navigator\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"리듬게임 GITADORA 시리즈의 기록 관리 사이트\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"ReactJS (TypeScript), Spring Boot (Kotlin), MariaDB, nginx, etc\",\r\n        period: \"2016.01~\",\r\n        link1: \"https://sin.nira.one\",\r\n        link2: \"https://github.com/prunusnira/gdinfo-react\",\r\n        link3: \"https://github.com/prunusnira/gdinfo-server\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>음악게임 GITADORA의 개인 기록 관리 사이트</li>\r\n                    <li>공식에서 지원하지 않는 부가적인 기능을 제공</li>\r\n                    <li>(2020년 2월 기준) 등록 계정 수 3800 (한국/일본/기타 해외)</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ol>\r\n                    <li>1세대: Spring Framework 4 / JSP</li>\r\n                    <li>2세대: Spring Boot 2 / Thymeleaf / Vue.js (MPA)</li>\r\n                    <li>3세대: Spring Boot 2 (Backend) + ReactJS (Frontend): GCE -> EC2 -> Lightsail</li>\r\n                    <li>4세대: Spring Boot 2 (Backend-AWS Lightsail) + ReactJS (Frontend-AWS S3)</li>\r\n                </ol>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        image: [\r\n            \"/project/sin/01.jpg\", \"/project/sin/02.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/piu/icon.png\",\r\n        title: {\r\n            \"ko\":\"PIU 기록 관리 툴\",\r\n            \"jp\":\"PIU 記録管理ツール\",\r\n            \"en\":\"PIU Manager\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"리듬게임 Pump It Up의 기록 관리 사이트\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"ReactJS (TypeScript), NodeJS (TypeScript), AWS DynamoDB, AWS S3, AWS Lambda, etc\",\r\n        period: \"2018.07~\",\r\n        link1: \"https://piu.nira.one\",\r\n        link2: \"https://github.com/prunusnira/piumanager\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>음악게임 Pump It Up의 개인 기록 관리 사이트</li>\r\n                    <li>유저들이 사용하고 있는 수동적으로 관리하는 서열표를 보고 자동화하면 어떨까 하는 생각으로 제작</li>\r\n                    <li>패턴의 데이터는 DB에서 관리하지만 개인의 기록은 CSV 파일 형태로 보관</li>\r\n                    <li>Kotlin을 사용해 WebView를 응용한 하이브리드 앱을 개발하여 PlayStore에 게시</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`Backend<br/>\r\n                <ul>\r\n                    <li>1세대: NodeJS, NGINX, MariaDB</li>\r\n                    <li>2세대: AWS Lambda, AWS S3, AWS DynamoDB</li>\r\n                </ul>\r\n                Front<br/>\r\n                <ul>\r\n                    <li>ReactJS, TypeScript</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/piu/01.jpg\", \"/project/piu/02.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/rhythm/icon.png\",\r\n        title: {\r\n            \"ko\":\"RhythmTracers (BMS Player)\",\r\n            \"jp\":\"RhythmTracers (BMS Player)\",\r\n            \"en\":\"RhythmTracers (BMS Player)\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"Unity로 제작된 BMS 구동기\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Unity3D (Windows)\",\r\n        tech: \"Unity3D\",\r\n        period: \"2020.08~\",\r\n        link1: \"https://youtu.be/lWQG4gIjGDM\",\r\n        link2: \"https://github.com/prunusnira/rhythmspaceV2\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>Unity3D로 개발된 건반형 리듬게임</li>\r\n                    <li>BMS(Be-Music Script)를 읽어 게임을 진행</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                    <li>C# 기반의 BMS 처리 모듈을 별도로 제작<br/>\r\n                    (BMS에 대한 클래스 정의, 각 노트 오브젝트에 대한 구조 등)</li>\r\n                    <li>플레이 시작 시간을 기준으로 곡의 재생 시간에 맞추어 노트 위치를 변경시키는 방식으로 구현</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/rhythm/01.png\", \"/project/rhythm/02.png\",\r\n            \"/project/rhythm/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/ringtone/icon.png\",\r\n        title: {\r\n            \"ko\":\"벨소리 관리자\",\r\n            \"jp\":\"Ringtone Manager\",\r\n            \"en\":\"Ringtone Manager\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"구 안드로이드에서 사용된 벨소리 랜덤 재생 어플\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Android (Under 7)\",\r\n        tech: \"Android (Java), SQLite\",\r\n        period: \"2011~2012 / 2015\",\r\n        link1: \"https://play.google.com/store/apps/details?id=com.ring.roxyeris\",\r\n        link2: \"https://github.com/prunusnira/ringtone-public\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>기기의 전화가 한 번 올 때마다 벨소리를 랜덤으로 바꿔주는 앱</li>\r\n                    <li>착신 상태를 확인하여 상태 변경에 따라 시스템 옵션을 변경</li>\r\n                    <li>14000+ 다운로드, 3.85 평점</li>\r\n                    <li>Disclaimer: 8~9년 전에 작성된 앱으로 현재 안드로이드 버전과는 맞지 않음</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                <li>Android 내부의 Telephony Manager로 착신 상태 확인</li>\r\n                <li>SQLite를 사용해 등록된 곡 관리</li>\r\n            </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        image: [\r\n            \"/project/ringtone/01.jpg\", \"/project/ringtone/02.jpg\",\r\n            \"/project/ringtone/03.jpg\", \"/project/ringtone/04.jpg\",\r\n            \"/project/ringtone/05.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/launcher/icon.png\",\r\n        title: {\r\n            \"ko\":\"Drawing Launcher\",\r\n            \"jp\":\"Drawing Launcher\",\r\n            \"en\":\"Drawing Launcher\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"사용자의 제스처로 앱을 실행하는 런처\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Android\",\r\n        tech: \"Android (Java)\",\r\n        period: \"2016.08~2017.04\",\r\n        link1: \"https://play.google.com/store/apps/details?id=com.roxyeris.drawinglauncher\",\r\n        link2: \"https://github.com/prunusnira/DrawingLauncher\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>제스처를 그려서 사용하는 앱 런처</li>\r\n                    <li>개인 사용을 목표로 만들었음</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                <li>Android의 API로 제공되는 Gesture, Gesture Store를 사용하여 개발</li>\r\n                <li>Gesture는 Gesture Store에 포함되어 로컬 파일로 저장 - 별도 DB 미사용</li>\r\n                <li>앱 서랍은 GridLayout으로 표현</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/launcher/01.jpg\", \"/project/launcher/02.jpg\",\r\n            \"/project/launcher/03.jpg\", \"/project/launcher/04.jpg\"\r\n        ]\r\n    }\r\n];\r\n\r\nexport default projPersonal;","const projNonPersonal = [\r\n    {\r\n        icon: \"/project/chatbot/icon.png\",\r\n        title: {\r\n            \"ko\":\"UniBot (인증서 채팅 봇)\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"인증서 사용에 대한 채팅봇\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Android / Web\",\r\n        tech: \"Android (Kotlin), ReactJS, Spring Boot 2, MariaDB\",\r\n        period: \"2019.12-2020.05\",\r\n        link1: \"https://play.google.com/store/apps/details?id=com.crosscert.aichat\",\r\n        link2: \"https://chatapp.crosscert.com\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>인증서 서비스 사용자들에게 필요한 사용법, 질문에 대한 답변을 채팅봇으로 만든 서비스</li>\r\n                    <li>향후 카카오톡 채널 연동, SSL인증서에 대한 채팅봇 개발 등이 예정되어 있었다</li>\r\n                    <li><b>(관련 인원 퇴사로 2020년 11월 30일 서비스 종료)</b></li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`프론트엔드: ReactJS (TypeScript), Bootstrap (Reactstrap) 사용`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/chatbot/01.jpg\", \"/project/chatbot/02.jpg\",\r\n            \"/project/chatbot/03.jpg\", \"/project/chatbot/04.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/backup/icon.png\",\r\n        title: {\r\n            \"ko\":\"인증서 클라우드 백업 서비스\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"인증서를 백업/복구 할 수 있게 해주는 서비스\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"Spring Boot 2 (Java), PostgreSQL\",\r\n        period: \"2020.01-2020.05\",\r\n        link1: \"\",\r\n        link2: \"\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                <li>브라우저 내부 저장소에 저장되어있는 인증서를 서버에 백업하여 브라우저/기기에 상관없이 인증서를 사용할 수 있게 하는 시스템</li>\r\n                <li>기존 개발되어있는 가입자 소프트웨어를 확장하여 클라이언트를 만듦</li>\r\n                <li>서버는 Spring Boot와 PostgreSQL을 사용하여 새로 제작</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                <li>클라이언트와의 통신을 위해 RESTful API 형태로 개발</li>\r\n                <li>HSM을 연동하여 보안성을 높임 (PKCS11 Provider 사용)</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/backup/01.jpg\", \"/project/backup/02.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/situation/icon.png\",\r\n        title: {\r\n            \"ko\":\"온톨로지 기반의 상황인지 모바일 프레임워크\",\r\n            \"jp\":\"Skill Navigator\",\r\n            \"en\":\"Situation aware mobile framework based on ontology\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"논문 내용 증명 개발 지원으로 참여한 프로젝트\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Java, Android\",\r\n        tech: \"Java, Android, Protege, Jena\",\r\n        period: \"2013\",\r\n        link1: \"https://www.researchgate.net/publication/264428214_Mobile_situation-aware_framework_for_developing_smart_mobile_software\",\r\n        link2: \"\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>모바일 환경에서 사용자의 현재 조건에 맞는 콘텐츠를 제공하는 프레임워크</li>\r\n                    <li>증명 지원을 위한 안드로이드 앱 개발과 이미 만들어진 프레임워크의 수정을 담당</li>\r\n                    <li>SCI-E 논문의 제 2저자로 참가</li>\r\n                    <li>* Mobile situation-aware framework for developing smart mobile software, Joonseok Park, Taejun Kang, Keunhyuk Yeom, Journal of Software: Evolution and Process, Vol. 26, Issue 12, 1 Dec 2014</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`[테스트용 음악 재생 어플]<br/>\r\n                    <ul>\r\n                        <li>사용자의 디바이스에 장착된 센서에서 데이터를 수집하고 온톨로지를 사용한 추론을 통해 결과값을 얻음</li>\r\n                        <li>도출된 결과 값을 이용하여 사용자에게 적합한 음악을 추천 및 재생</li>\r\n                    </ul>\r\n                    [프레임워크 수정]<br/>\r\n                    <ul>\r\n                        <li>온톨로지를 분석하여 사용자가 설정한 값을 한 번에 확인할 수 있는 트리 구조 생성 및 제공</li>\r\n                    </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/situation/01.jpg\", \"/project/situation/02.jpg\",\r\n            \"/project/situation/03.jpg\", \"/project/situation/04.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/aicore/icon.png\",\r\n        title: {\r\n            \"ko\":\"AI 플랫폼 개발\",\r\n            \"jp\":\"AIプラットフォーム\",\r\n            \"en\":\"AI Platform Development\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"Agent간 데이터 전송 파트 개발\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Java\",\r\n        tech: \"\",\r\n        period: \"2015.5~2016.8\",\r\n        link1: \"https://aibrain.com/solutions/aicore-adaptive-interactive-cognitive-reasoning-engine/\",\r\n        link2: \"\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`대화 가능한 AI를 만들기 위한 자연언어 처리 프로젝트에 모듈 개발로 참가<br/><br/>\r\n            (1) NLG(Natural Language Generation) 엔진\r\n            <ul>\r\n                <li>Planner에서 생성할 문장을 입력을 받음</li>\r\n                <li>시간 정보를 제외한 문장 생성</li>\r\n                <li>분석된 시제 정보에 따라 문장 시제 변경</li>\r\n                <li>완성된 문장을 리턴</li>\r\n            </ul>\r\n            (2) IAC(Inter-Agent Communication)\r\n            <ul>\r\n                <li>Planner에서 다른 에이전트로의 데이터 전송을 요청받음</li>\r\n                <li>JADE Framework에서 FIPA-ACL 메시지 구조에 맞는 통신용 메시지를 작성</li>\r\n                <li>JADE Framework로 메시지를 전송</li>\r\n            </ul>\r\n            * JADE Framework: Java로 작성된 Multi-Agent System 개발을 위한 프레임워크<br/>\r\n            * ACL: Agent Communication Language`,\r\n            \"jp\":`- 言葉を分かるAIを作る為の自然言語処理プロジェクトに参加`,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":\"Java, JADE Framework\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/aicore/01.jpg\", \"/project/aicore/02.jpg\",\r\n            \"/project/aicore/03.jpg\", \"/project/aicore/04.jpg\",\r\n            \"/project/aicore/05.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/aigame/icon.png\",\r\n        title: {\r\n            \"ko\":\"AI 엔진을 활용한 게임 개발\",\r\n            \"jp\":\"AIゲーム開発\",\r\n            \"en\":\"AI Game Development\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"서버와 클라이언트 간 통신, Google Play 연동 등 개발\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Unity\",\r\n        tech: \"Unity\",\r\n        period: \"2016.8~2017.2\",\r\n        link1: \"https://aibrain.com/products/futurable-true-ai-game/\",\r\n        link2: \"\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                <li>회사가 보유한 AI 기술을 활용하여 게임 개발을 진행</li>\r\n                <li>NPC는 게임의 환경을 확인하여 현재 자신의 상태와 조건을 확인</li>\r\n                <li>NPC의 다음 동작은 이러한 상태를 사용한 추론 결과에 따라 진행됨</li>\r\n            </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`(1) 클라이언트 (C#)\r\n            <ul>\r\n                <li>Google Play Service 연동, 서버 통신, UI, 디버깅</li>\r\n            </ul>\r\n            (2) 서버 (Java/Spring)\r\n            <ul>\r\n                <li>회사에서 보유중인 AI 플랫폼을 서버에서 구동</li>\r\n                <li>유저별 대화내용 보존 및 대화 시스템 구성 및 개발</li>\r\n                <li>XHR로 클라이언트에서 요청을 받음</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/aigame/01.jpg\", \"/project/aigame/02.jpg\",\r\n            \"/project/aigame/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/fautonomy/icon.png\",\r\n        title: {\r\n            \"ko\":\"AI 게임 개발 플러그인\",\r\n            \"jp\":\"AIゲームプラグイン開発\",\r\n            \"en\":\"AI Game Plugin Development\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Unity\",\r\n        tech: \"Unity\",\r\n        period: \"2016.12~2018.1\",\r\n        link1: \"https://aibrain.com/products/futurable-true-ai-game/\",\r\n        link2: \"https://assetstore.unity.com/packages/tools/ai/fautonomy-105444\",\r\n        link3: \"\",\r\n        content: {\r\n            \"ko\":`<ul>\r\n                <li>AI 게임에 사용된 기술을 사용하여 Unity 개발자가 사용할 수 있는 플러그인을 제작</li>\r\n                <li>개발자는 게임내의 환경 상황, 캐릭터의 시야나 인지에 대한 설정, 캐릭터가 수행하는 동작에 대한 조건 등을 플러그인에 입력</li>\r\n                <li>사용자가 지정한 조건을 서버로 전송하여 Tensorflow로 학습</li>\r\n                <li>학습의 결과로 나온 ProtoBuf 파일을 다운로드하여 클라이언트에 적용</li>\r\n                <li>클라이언트의 일부와 서버 개발을 중심으로 담당</li>\r\n            </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`(1) 클라이언트 (C#)\r\n            <ul>\r\n                <li>UI, 서버 통신, 디버그</li>\r\n            </ul>\r\n            (2) 서버 (Java/Spring)\r\n            <ul>\r\n                <li>서버에서 전송한 게임 환경 정보 등을 Process로 Python 코드를 실행하는 방식으로 수행</li>\r\n                <li>Python 코드는 Tensorflow를 실행하기 위한 코드가 들어있음</li>\r\n                <li>다수의 클라이언트에서 동시에 요청이 들어오는 경우 Queue로 관리</li>\r\n                <li>XHR로 클라이언트에서 요청을 받고 처리함</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/fautonomy/01.jpg\", \"/project/fautonomy/02.jpg\",\r\n            \"/project/fautonomy/03.jpg\"\r\n        ]\r\n    },\r\n];\r\n\r\nexport default projNonPersonal;","const textProject = {\r\n    platform: {\r\n        \"ko\":\"플랫폼\",\r\n        \"jp\":\"プラットフォーム\",\r\n        \"en\":\"Platform\"\r\n    },\r\n    tech: {\r\n        \"ko\":\"사용 기술\",\r\n        \"jp\":\"スキル\",\r\n        \"en\":\"Skill\"\r\n    },\r\n    period: {\r\n        \"ko\":\"기간\",\r\n        \"jp\":\"開発期間\",\r\n        \"en\":\"Period\"\r\n    },\r\n    dev: {\r\n        \"ko\":\"개발\",\r\n        \"jp\":\"開発内容\",\r\n        \"en\":\"Development\"\r\n    }\r\n};\r\n\r\nexport default textProject;","import React, { Component, Fragment } from \"react\";\r\nimport { Card, CardBody, Col, Row } from \"reactstrap\";\r\nimport ProjectItem from \"../../data/projectItem\";\r\nimport textProject from \"../../text/project\";\r\nimport Language from \"../../tool/language\";\r\n\r\ninterface Props {\r\n    item: ProjectItem\r\n}\r\n\r\ninterface State {\r\n    isOpen: boolean\r\n}\r\n\r\nclass ProjectListObject extends Component<Props, State> {\r\n    private lang = Language.getLang();\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.changeOpen = this.changeOpen.bind(this);\r\n    }\r\n\r\n    state: State = {\r\n        isOpen: false\r\n    }\r\n\r\n    changeOpen = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const item = this.props.item;\r\n        return (\r\n            <Fragment>\r\n                <Row className=\"projobj-overall\">\r\n                    <Col xs=\"12\">\r\n                        <Row onClick={this.changeOpen}>\r\n                            <Col xs=\"2\">\r\n                                <img\r\n                                    alt=\"icon\"\r\n                                    className=\"projobj-icon\"\r\n                                    src={process.env.PUBLIC_URL+\"/img\"+item.icon} />\r\n                            </Col>\r\n                            <Col xs=\"10\">\r\n                                <Row>\r\n                                    <Col xs=\"9\" className=\"projobj-title\">\r\n                                        {item.title}\r\n                                    </Col>\r\n                                    <Col xs=\"3\">\r\n                                        {item.platform}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs=\"12\">\r\n                                        {item.simpledesc}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Card style={\r\n                            this.state.isOpen?\r\n                            {\r\n                                display: \"block\"\r\n                            }\r\n                            :\r\n                            {\r\n                                display: \"none\"\r\n                            }\r\n                        }>\r\n                            <CardBody className=\"projcard\">\r\n                                <Row className=\"paragraph\">\r\n                                    <Col xs=\"6\" className=\"text\">\r\n                                        <b>{(textProject.platform as any)[this.lang]}</b><br/>\r\n                                        <span className=\"lv3\">{item.platform}</span>\r\n                                    </Col>\r\n                                    <Col xs=\"6\" className=\"text\">\r\n                                        <b>{(textProject.period as any)[this.lang]}</b><br/>\r\n                                        <span className=\"lv3\">{item.period}</span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        <b>{(textProject.tech as any)[this.lang]}</b><br/>\r\n                                        <span className=\"lv3\">{item.tech}</span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        <b>Link 1</b>\r\n                                        &nbsp;\r\n                                        <span className=\"lv3\">\r\n                                            <a\r\n                                                key=\"link1\"\r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href={item.link1}>\r\n                                                {item.link1}\r\n                                            </a>\r\n                                        </span><br/>\r\n                                        <b>Link 2</b>\r\n                                        &nbsp;\r\n                                        <span className=\"lv3\">\r\n                                            <a\r\n                                                key=\"link2\"\r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href={item.link2}>\r\n                                                {item.link2}\r\n                                            </a>\r\n                                        </span><br/>\r\n                                        <b>Link 3</b>\r\n                                        &nbsp;\r\n                                        <span className=\"lv3\">\r\n                                            <a\r\n                                                key=\"link3\"\r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\"\r\n                                                href={item.link3}>\r\n                                                {item.link3}\r\n                                            </a>\r\n                                        </span><br/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        <span className=\"lv3\" dangerouslySetInnerHTML={{__html:item.content}}></span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        <b>{(textProject.dev as any)[this.lang]}</b><br/>\r\n                                        <span className=\"lv3\" dangerouslySetInnerHTML={{__html:item.dev}}></span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        <b>Images</b><br/>\r\n                                        <span className=\"lv3\">Click to open in the new tab</span><br/>\r\n                                        <span className=\"lv3\">\r\n                                            {\r\n                                                item.image.map((e) => {\r\n                                                    const imgUrl = process.env.PUBLIC_URL+\"/img\"+e;\r\n                                                    return (\r\n                                                        <a\r\n                                                            key={e}\r\n                                                            target=\"_blank\"\r\n                                                            rel=\"noopener noreferrer\"\r\n                                                            href={imgUrl}>\r\n                                                            <img alt=\"\" className=\"projobj-image\" src={imgUrl}/>\r\n                                                        </a>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row onClick={this.changeOpen}>\r\n                                    <Col xs=\"12\" className=\"text-center\">\r\n                                        <a href=\"#no_div\">▲ CLOSE ▲</a>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectListObject;","import React, { Component } from \"react\";\r\nimport ProjectItem from \"../../data/projectItem\";\r\nimport ProjectListObject from \"./projectListObject\";\r\n\r\ninterface Props {\r\n    list: Array<ProjectItem>\r\n}\r\n\r\nclass ProjectListWrapper extends Component<Props> {\r\n    render() {\r\n        return (\r\n            this.props.list.map(v => {\r\n                return <ProjectListObject item={v} />\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectListWrapper;","import React, {Component} from 'react';\r\nimport { Col, Row, Container, Nav, NavItem, TabContent, TabPane, NavLink } from 'reactstrap';\r\n\r\nimport ProjectItem from '../../data/projectItem';\r\n\r\nimport projPersonal from '../../data/projPersonal';\r\nimport projNonPersonal from '../../data/projNonPersonal';\r\n\r\nimport Language from '../../tool/language';\r\nimport ReactWOW from 'react-wow';\r\n\r\nimport './project.scss';\r\nimport ProjectListWrapper from './projectListWrapper';\r\n\r\ninterface State {\r\n    catName: string,\r\n    catSize: number,\r\n    catList: Array<ProjectItem>,\r\n    ppList: Array<ProjectItem>,\r\n    npList: Array<ProjectItem>,\r\n    catCurNum: number,\r\n    catPage: number\r\n}\r\n\r\nclass ProjectPage extends Component<{}, State> {\r\n    private lang: string = Language.getLang();\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.updateCatNum = this.updateCatNum.bind(this);\r\n        this.moveProject = this.moveProject.bind(this);\r\n    }\r\n\r\n    state: State = {\r\n        catName: \"\",\r\n        catSize: 0,\r\n        catList: Array<ProjectItem>(),\r\n        ppList: Array<ProjectItem>(),\r\n        npList: Array<ProjectItem>(),\r\n        catCurNum: 0,\r\n        catPage: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadProjectList(\"projPersonal\");\r\n    }\r\n\r\n    // 리스트를 현재 선택한 것만으로 변경함\r\n    loadProjectList(moduleName: string) {\r\n        // 작업 전에 현재 페이지 번호를 초기화\r\n        this.updateCatNum(0);\r\n\r\n        let m = null;\r\n        switch(moduleName) {\r\n            case \"projPersonal\":\r\n                m = projPersonal;\r\n                break;\r\n            case \"projNonPersonal\":\r\n                m = projNonPersonal;\r\n                break;\r\n        }\r\n\r\n        if(m != null) {\r\n            const size = m.length;\r\n            const plist = Array<ProjectItem>();\r\n            const nlist = Array<ProjectItem>();\r\n\r\n            projPersonal.forEach(e => {\r\n                plist.push(this.generateItemObject(e));\r\n            });\r\n            projNonPersonal.forEach(e => {\r\n                nlist.push(this.generateItemObject(e));\r\n            });\r\n\r\n            this.setState({\r\n                catName: moduleName,\r\n                catSize: size,\r\n                ppList: plist,\r\n                npList: nlist\r\n            });\r\n        }\r\n    }\r\n\r\n    generateItemObject(e: any) {\r\n        return new ProjectItem(\r\n            e.icon,\r\n            (e.title as any)[this.lang],\r\n            (e.simpledesc as any)[this.lang],\r\n            e.platform,\r\n            e.tech,\r\n            e.period,\r\n            e.link1,\r\n            e.link2,\r\n            e.link3,\r\n            (e.content as any)[this.lang],\r\n            (e.dev as any)[this.lang],\r\n            e.image);\r\n    }\r\n\r\n    updateCatNum(num: number) {\r\n        this.setState({\r\n            catCurNum: num\r\n        });\r\n    }\r\n\r\n    moveProject(idx: number) {\r\n        const catlen = this.state.catSize;\r\n        let nextidx: number;\r\n\r\n        if(idx > catlen - 1) nextidx = catlen - 1;\r\n        else if(idx < 0) nextidx = 0;\r\n        else nextidx = idx;\r\n\r\n        this.setState({\r\n            catCurNum: nextidx\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"color-proj\">\r\n                <Container>\r\n                    <Row className=\"h100\" id=\"works\">\r\n                        <Col xs=\"12\">\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW animation=\"slideInLeft\">\r\n                                    <Col className=\"text text-left\" xs=\"12\">\r\n                                        <span className=\"lv1\">Works</span><br/>\r\n                                        <span className=\"lv3\">Click/Touch to expand</span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <ReactWOW animation=\"slideInLeft\">\r\n                                    <Col xs=\"12\">\r\n                                        <Nav tabs>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    className={(this.state.catPage === 0 ? \"active\":\"\")}\r\n                                                    onClick={() => {\r\n                                                    this.setState({\r\n                                                        catPage: 0\r\n                                                    });\r\n                                                }}>\r\n                                                    Personal Work\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    className={(this.state.catPage === 1 ? \"active\":\"\")}\r\n                                                    onClick={() => {\r\n                                                    this.setState({\r\n                                                        catPage: 1\r\n                                                    });\r\n                                                }}>\r\n                                                    Non-Personal Work\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                        </Nav>\r\n                                        <TabContent activeTab={this.state.catPage}>\r\n                                            <TabPane tabId={0}>\r\n                                                <ProjectListWrapper list={this.state.ppList}/>\r\n                                            </TabPane>\r\n                                            <TabPane tabId={1}>\r\n                                                <ProjectListWrapper list={this.state.npList}/>\r\n                                            </TabPane>\r\n                                        </TabContent>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectPage;","import React, {Component, Fragment} from 'react';\r\n\r\nclass Experience extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Experience;","import React, { Component } from \"react\";\r\nimport ReactWOW from \"react-wow\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport \"./link.scss\";\r\n\r\nclass Link extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"color-link\">\r\n                <Container>\r\n                    <Row className=\"h100\" id=\"link\">\r\n                        <Col xs=\"12\">\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW animation=\"slideInLeft\">\r\n                                    <Col className=\"text text-left\" xs=\"12\">\r\n                                        <span className=\"lv1\">Links</span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW animation=\"slideInLeft\">\r\n                                    <Col xs=\"12\">\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- Blog</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://arincblossom.wordpress.com\">\r\n                                                        https://arincblossom.wordpress.com</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- GitHub</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://github.com/prunusnira\">\r\n                                                        https://github.com/prunusnira</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- Skill Navigator</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://sin.nira.one\">\r\n                                                        https://sin.nira.one</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- PIU Manager</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://piu.nira.one\">\r\n                                                        https://piu.nira.one</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- Twitch BanPicker</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://banpick.nira.one\">\r\n                                                        https://banpick.nira.one</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Link;","import React, {Component, Fragment} from 'react';\r\n\r\nimport Landing from './landing/landing';\r\nimport FixedTop from './fixedTop';\r\nimport FixedBottom from './fixedBottom';\r\nimport About from './profile/profile';\r\nimport ProjectPage from './project/project';\r\nimport Experience from './experience';\r\nimport Link from './link/link';\r\n\r\nclass Index extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <FixedTop />\r\n                <Landing />\r\n                <About />\r\n                <ProjectPage />\r\n                <Experience />\r\n                <Link />\r\n                <FixedBottom />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React from 'react';\nimport Index from './page/index';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './App.scss';\nimport 'animate.css';\n\nconst App: React.FC = () => {\n  return (\n    <Index />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}