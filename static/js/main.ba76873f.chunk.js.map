{"version":3,"sources":["page/landing/landing.tsx","tool/language.ts","page/fixedTop.tsx","page/fixedBottom.tsx","text/about.ts","data/techStackData.ts","page/profile/techStackCard.tsx","page/profile/profile.tsx","data/projectItem.ts","data/projPersonal.ts","data/projNonPersonal.ts","text/project.ts","page/project/projectListObject.tsx","page/project/projectListWrapper.tsx","page/project/project.tsx","page/experience.tsx","page/link/link.tsx","page/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Landing","className","Container","Row","id","Col","xs","animation","delay","icon","faAngleDoubleDown","Component","Language","lang","navigator","language","this","readCookie","eraseCookie","createCookie","type","window","location","reload","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","FixedTop","props","state","isOpen","toggle","bind","setState","Navbar","fixed","NavbarBrand","Nav","NavItem","NavLink","href","Dropdown","nav","DropdownToggle","onClick","DropdownMenu","DropdownItem","changeLang","disabled","style","color","FixedBottom","position","bottom","right","textAlign","fontSize","textAbout","para1t","para1c","para2t","para2c","para3t","para3c1","para3c2","techStackData","title","cont","img","desc","TechStackCard","Card","CardHeader","CardBody","map","v","x","sm","alt","height","src","process","About","key","faAngleDoubleRight","faAngleRight","dangerouslySetInnerHTML","__html","d","ProjectItem","simpledesc","platform","tech","period","link","content","dev","image","projPersonal","projNonPersonal","textProject","clickToExpand","ProjectListObject","getLang","changeOpen","render","item","display","target","rel","e","imgUrl","ProjectListWrapper","list","ProjectPage","catName","catSize","catList","Array","ppList","npList","catCurNum","catPage","updateCatNum","moveProject","loadProjectList","moduleName","m","size","plist","nlist","forEach","push","generateItemObject","num","idx","nextidx","catlen","tabs","TabContent","activeTab","TabPane","tabId","Experience","Link","Index","App","Boolean","hostname","match","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba76873f.chunk.js","sourcesContent":["import React, {Component } from 'react';\r\nimport {Row, Col, Container} from 'reactstrap';\r\nimport ReactWOW from 'react-wow';\r\nimport \"./landing.scss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"bg-landing\">\r\n                <Container>\r\n                    <Row className=\"color-land flex-center\" id=\"landing\">\r\n                        <Col xs=\"12\">\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW animation=\"fadeInDown\" delay=\"0.5s\">\r\n                                    <Col className=\"text text-left\" xs=\"12\">\r\n                                        <span className=\"lv1\">Tae Jun Kang</span><br/>\r\n                                        <span className=\"lv3\">a developer & gamer</span><br/>\r\n                                        <span className=\"lv3\">contact: tjkang0207@gmail.com</span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row>\r\n                                <ReactWOW animation=\"fadeInDown\" delay=\"1s\">\r\n                                    <Col className=\"text text-center arrow-down-size\" xs=\"12\">\r\n                                        <FontAwesomeIcon icon={faAngleDoubleDown} />\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","class Language {\r\n    static getLang(): string {\r\n        let lang = navigator.language;// || navigator.systemLanguage;\r\n        if(this.readCookie(\"lang\") !== null &&\r\n            (this.readCookie(\"lang\") === 'ko' || this.readCookie(\"lang\") === 'jp' || this.readCookie(\"lang\") === 'en')\r\n        ) {\r\n            lang = this.readCookie(\"lang\")!;\r\n        }\r\n        else {\r\n            if(lang==='ko' || lang==='ko-kr' || lang==='ko-KR') {\r\n                lang = 'ko';\r\n            }\r\n            else if(lang==='ja' || lang==='ja-jp' || lang==='ja-JP') {\r\n                lang = 'jp';\r\n            }\r\n            else {\r\n                lang = 'en';\r\n            }\r\n        \r\n            this.eraseCookie(\"lang\");\r\n            this.createCookie(\"lang\", lang, 1);\r\n        }\r\n        return lang;\r\n    }\r\n\r\n    static changeLang(type: string) {\r\n        this.eraseCookie(\"lang\");\r\n        this.createCookie(\"lang\", type, 1);\r\n        window.location.reload();\r\n    }\r\n\r\n    static createCookie(name: string, value: string, days: number) {\r\n        let expires = \"\";\r\n        if (days) {\r\n            const date = new Date();\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            expires = \"; expires=\"+date.toUTCString();\r\n        }\r\n        else expires = \"\";\r\n        document.cookie = name+\"=\"+value+expires+\"; path=/\";\r\n    }\r\n\r\n    static readCookie(name: string) {\r\n        const nameEQ = name + \"=\";\r\n        const ca = document.cookie.split(';');\r\n        for(let i=0;i < ca.length;i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0)===' ') c = c.substring(1,c.length);\r\n            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static eraseCookie(name: string) {\r\n        this.createCookie(name,\"\",-1);\r\n    }\r\n}\r\n\r\nexport default Language;","import React, {Component} from 'react';\r\nimport {Navbar, NavItem, Nav, NavbarBrand, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\r\n\r\nimport \"./css/navbar.scss\";\r\nimport Language from '../tool/language';\r\n\r\ninterface State {\r\n    isOpen: boolean\r\n}\r\n\r\nclass FixedTop extends Component<{}, State> {\r\n    constructor(props:{}) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n    state: State = {\r\n        isOpen: false\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar className=\"transparent\" fixed=\"top\">\r\n                <NavbarBrand></NavbarBrand>\r\n                <Nav>\r\n                    <NavItem>\r\n                        <NavLink href=\"#profile\"\r\n                            className=\"nav-color\">\r\n                            About\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"#works\"\r\n                            className=\"nav-color\">\r\n                            Works\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"#link\"\r\n                            className=\"nav-color\">\r\n                            Link\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <Dropdown nav isOpen={this.state.isOpen}>\r\n                        <DropdownToggle nav onClick={this.toggle}\r\n                            className=\"nav-color\">\r\n                            Language\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            <DropdownItem\r\n                                onClick={() => Language.changeLang(\"ko\")}>\r\n                                한국어\r\n                            </DropdownItem>\r\n                            <DropdownItem disabled style={{color:\"lightgrey\"}}\r\n                                onClick={() => Language.changeLang(\"jp\")}>\r\n                                日本語\r\n                            </DropdownItem>\r\n                            <DropdownItem disabled style={{color:\"lightgrey\"}}\r\n                                onClick={() => Language.changeLang(\"en\")}>\r\n                                English\r\n                            </DropdownItem>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </Nav>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FixedTop;","import React, {Component} from 'react';\r\n\r\nclass FixedBottom extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\"\r\n                style={{\r\n                    position:\"fixed\",\r\n                    bottom:\"10px\",\r\n                    right:\"10px\",\r\n                    textAlign:\"right\",\r\n                    color: \"white\",\r\n                    fontSize: \"80%\"\r\n                }}\r\n            >\r\n                (c) 2020 Prunus Nira<br/>\r\n                Hosted on github.io\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FixedBottom;","const textAbout = {\r\n    para1t: {\r\n        \"ko\":\"소개\",\r\n        \"jp\":\"About\",\r\n        \"en\":\"About\"\r\n    },\r\n    para1c: {\r\n        \"ko\":`개발 그 자체에 흥미를 갖고 다양한 분야에 대해 공부하고 있는 잡식 개발자입니다.<br/>\r\n                저는 대학교에 들어가서 프로그래밍을 공부하기 시작했지만 이전부터 개발자의 꿈을 가지고 있었습니다.<br/>\r\n                이후 소프트웨어 공학 연구실에서 석사과정을 수학하며 소프트웨어 설계에 대해 공부하기도 했습니다<br/><br/>\r\n                이전에는 Java/Kotlin을 이용하여 서버, 플랫폼 등의 개발을 경험했으며<br/>\r\n                현재는 웹 개발에 재미를 느끼고 있어 더욱 깊게 파고들기 위해 공부중입니다<br/>\r\n                업무나 개인 개발로 웹 서비스를 만들기도 하였으며 현재도 서비스중입니다<br/>\r\n                그 외에도 Android 개발이나, Unity를 이용한 게임 제작 등에도 흥미가 있습니다`,\r\n        \"jp\":`長くも薄広く勉強しましたが、最近はWebに興味を持っている雑食デベロッパーです`,\r\n        \"en\":``\r\n    },\r\n    para2t: {\r\n        \"ko\":\"잠깐이나마 사용해 본 것들\",\r\n        \"jp\":\"使ってみたこと\",\r\n        \"en\":\"Experienced Tech\"\r\n    },\r\n    para2c: {\r\n        \"ko\":\"자세한 포트폴리오는 아래의 Works를 참고해주세요\",\r\n        \"jp\":\"詳しいポートフォリオはWorksを参考にしてください\",\r\n        \"en\":\"Please check 'Works' for detailed portfolio\"\r\n    },\r\n    para3t: {\r\n        \"ko\":\"일 해본 경험\",\r\n        \"jp\":\"お仕事の経験\",\r\n        \"en\":\"Work Experiences\"\r\n    },\r\n    para3c1: {\r\n        \"ko\":`근무처: 한국전자인증<br/>\r\n                직종: 금융, 보안, AI<br/>\r\n                업무: R&D, 소프트웨어 개발<br/>\r\n                (석사 후 전문연구요원으로 대체 복무 진행)`,\r\n        \"jp\":\"Crosscert Inc\",\r\n        \"en\":\"Crosscert Inc\"\r\n    },\r\n    para3c2: {\r\n        \"ko\":`근무처: 부산대학교 전기전자컴퓨터공학부 소프트웨어공학 연구실<br/>\r\n            최종학력: MS. in Computer Science and Engineering<br/>\r\n            업무: R&D`,\r\n        \"jp\":\"\",\r\n        \"en\":\"Software Engineering Lab, Pusan Nat'l Univ. Electric-Electronic-Computer Engineering Dept. Majored in Computer Engineering\"\r\n    }\r\n};\r\n\r\nexport default textAbout;","import { TechStackWrap } from \"./TechStackWrap\";\r\n\r\nconst techStackData: TechStackWrap[] = [\r\n    {\r\n        title: \"Web\",\r\n        cont: [\r\n            {\r\n                title: \"Frontend\",\r\n                cont: [\r\n                    { img: \"/img/about/js.png\", name: \"JavaScript\" },\r\n                    { img: \"/img/about/ts.png\", name: \"TypeScript\" },\r\n                    { img: \"/img/about/html.png\", name: \"HTML\" },\r\n                    { img: \"/img/about/css.png\", name: \"CSS\" },\r\n                    { img: \"/img/about/react.png\", name: \"ReactJS\" },\r\n                    { img: \"/img/about/bootstrap.png\", name: \"Bootstrap\" },\r\n                    { img: \"/img/about/jquery.png\", name: \"jQuery\" }\r\n                ],\r\n                desc: \"\"\r\n            },\r\n            {\r\n                title: \"Backend\",\r\n                cont: [\r\n                    { img: \"/img/about/java.png\", name: \"Java\" },\r\n                    { img: \"/img/about/kotlin.png\", name: \"Kotlin\" },\r\n                    { img: \"/img/about/spring.png\", name: \"Spring\" },\r\n                    { img: \"/img/about/aws.png\", name: \"AWS\" },\r\n                    { img: \"/img/about/nginx.png\", name: \"NGINX\" },\r\n                    { img: \"/img/about/letsencrypt.png\", name: \"CertBot\" }\r\n                ],\r\n                desc: \"* AWS는 S3, Lambda, DynamoDB, CloudFront, API Gateway, Lightsail를 경험해보았습니다\"\r\n            },\r\n            {\r\n                title: \"Usage Examples\",\r\n                cont: [],\r\n                desc: `인증서 채팅봇 프론트엔드 개발(2020), 인증서 백업 서버 개발(2020),\r\n                            개인 웹 서비스 3종 개발 및 운영중(2016~)`\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Android\",\r\n        cont: [\r\n            {\r\n                title: \"Language\",\r\n                cont: [\r\n                    { img: \"/img/about/java.png\", name: \"Java\" },\r\n                    { img: \"/img/about/kotlin.png\", name: \"Kotlin\" }\r\n                ],\r\n                desc: \"\"\r\n            },\r\n            {\r\n                title: \"Usage Examples\",\r\n                cont: [],\r\n                desc: \"웹 서비스용 앱 개발 (총 2종, 2020), 개인 앱 개발 및 PlayStore 게시(2013~)\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Unity3D\",\r\n        cont: [\r\n            {\r\n                title: \"Language\",\r\n                cont: [\r\n                    { img: \"/img/about/csharp.png\", name: \"C#\" }\r\n                ],\r\n                desc: \"\"\r\n            },\r\n            {\r\n                title: \"Usage Examples\",\r\n                cont: [],\r\n                desc: \"리듬게임(BMS구동기) 개발, AI 플랫폼을 활용한 게임 및 플러그인 개발\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"DB\",\r\n        cont: [\r\n            {\r\n                title: \"Tried\",\r\n                cont: [\r\n                    { img: \"/img/about/mysql.png\", name: \"MySQL\" },\r\n                    { img: \"/img/about/mariadb.png\", name: \"MariaDB\" },\r\n                    { img: \"/img/about/sqlite.png\", name: \"SQLite\" },\r\n                    { img: \"/img/about/postgresql.png\", name: \"PostgreSQL\" },\r\n                    { img: \"/img/about/dynamodb.png\", name: \"AWS DynamoDB\" },\r\n                ],\r\n                desc: \"\"\r\n            },\r\n            {\r\n                title: \"Usage Examples\",\r\n                cont: [],\r\n                desc: \"개인 개발한 웹 서비스(MySQL계/DynamoDB), 회사 업무(PostgreSQL), Android 앱 및 Unity(SQLite)\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"etc\",\r\n        cont: [\r\n            {\r\n                title: \"Version Management\",\r\n                cont: [\r\n                    { img: \"/img/about/github.png\", name: \"GitHub\" },\r\n                    { img: \"/img/about/gitlab.png\", name: \"GitLab\" },\r\n                    { img: \"/img/about/bitbucket.png\", name: \"BitBucket\" }\r\n                ],\r\n                desc: \"\"\r\n            },\r\n            {\r\n                title: \"UML\",\r\n                cont: [\r\n                    { img: \"/img/about/ea.png\", name: \"Enterprise Architect\" },\r\n                    { img: \"/img/about/visualparadigm.png\", name: \"Visual Paradigm\" },\r\n                    { img: \"/img/about/staruml.png\", name: \"StarUML\" }\r\n                ],\r\n                desc: \"\"\r\n            },\r\n            {\r\n                title: \"Documentation\",\r\n                cont: [\r\n                    { img: \"/img/about/msoffice.png\", name: \"MS Office\" }\r\n                ],\r\n                desc: \"Word, PowerPoint, Excel\"\r\n            },\r\n            {\r\n                title: \"Design\",\r\n                cont: [\r\n                    { img: \"/img/about/photoshop.png\", name: \"Photoshop\" }\r\n                ],\r\n                desc: \"기본적인 사용 레벨, 유튜브 썸네일 정도의 작업은 가능합니다\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default techStackData;","import React, {Component, Fragment} from 'react';\r\nimport { Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport { TechStackInner } from '../../data/TechStackInner';\r\nimport \"./profile.scss\";\r\n\r\ninterface Props {\r\n    title: string,\r\n    cont: TechStackInner[]\r\n}\r\n\r\nconst TechStackCard: React.FC<Props> = ({title, cont}) => {\r\n    return (\r\n        <Card className=\"text techcard\">\r\n            <CardHeader className=\"lv2 cardheader\">\r\n                {title}\r\n            </CardHeader>\r\n            <CardBody className=\"cardbody\">\r\n                {\r\n                    cont.map(v => {\r\n                        return (\r\n                        <Fragment>\r\n                            <span className=\"lv3\"><b>{v.title}</b></span><br/>\r\n                            <Row>\r\n                                {\r\n                                    v.cont.map(x => {\r\n                                        return (\r\n                                            <Col xs=\"4\" sm=\"2\" className=\"text-center\">\r\n                                                <Row>\r\n                                                    <Col xs=\"12\">\r\n                                                        <img\r\n                                                            alt=\"js\"\r\n                                                            height=\"50px\"\r\n                                                            src={process.env.PUBLIC_URL+x.img} />\r\n                                                    </Col>\r\n                                                    <Col xs=\"12\">{x.name}<br/>&nbsp;</Col>\r\n                                                </Row>\r\n                                            </Col>)\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs=\"12\">\r\n                                    {v.desc}<br/>&nbsp;\r\n                                </Col>\r\n                            </Row>\r\n                        </Fragment>)\r\n                    })\r\n                }\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default TechStackCard;","import React, {Component} from 'react';\r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport ReactWOW from 'react-wow';\r\nimport \"./profile.scss\";\r\nimport textAbout from '../../text/about';\r\nimport techStackData from '../../data/techStackData';\r\nimport TechStackCard from './techStackCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass About extends Component {\r\n    private lang = \"ko\";\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"color-prof\">\r\n                <Container>\r\n                    <Row className=\"h100\" id=\"profile\">\r\n                        <Col xs=\"12\">\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW\r\n                                    key=\"profile1\"\r\n                                    animation=\"slideInLeft\">\r\n                                    <Col className=\"text text-left\" xs=\"12\">\r\n                                        <span className=\"lv1\">\r\n                                            <FontAwesomeIcon icon={faAngleDoubleRight} />&nbsp;\r\n                                            About\r\n                                        </span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW\r\n                                    key=\"profile2\"\r\n                                    animation=\"slideInLeft\">\r\n                                    <Col className=\"text\" xs=\"12\">\r\n                                        <span className=\"lv2\">\r\n                                            <FontAwesomeIcon icon={faAngleRight} />&nbsp;\r\n                                            {(textAbout.para1t as any)[this.lang]}\r\n                                        </span><br/>\r\n                                        <span className=\"lv3\" dangerouslySetInnerHTML={{__html: (textAbout.para1c as any)[this.lang]}}></span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW\r\n                                    key=\"profile3\"\r\n                                    animation=\"slideInLeft\">\r\n                                    <Col className=\"text\" xs=\"12\">\r\n                                        <span className=\"lv2\">\r\n                                            <FontAwesomeIcon icon={faAngleRight} />&nbsp;\r\n                                            {(textAbout.para2t as any)[this.lang]}\r\n                                        </span><br/>\r\n                                        <span className=\"lv3\">{(textAbout.para2c as any)[this.lang]}</span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                {\r\n                                    techStackData.map((d, i) => {\r\n                                        return (\r\n                                            <ReactWOW\r\n                                                key={\"profile4\"+i}\r\n                                                animation=\"slideInLeft\">\r\n                                                <Col className=\"text\" sm=\"12\">\r\n                                                    <TechStackCard\r\n                                                        title={d.title}\r\n                                                        cont={d.cont}\r\n                                                    />\r\n                                                </Col>\r\n                                            </ReactWOW>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW\r\n                                    key=\"profile5\"\r\n                                    animation=\"slideInLeft\">\r\n                                    <Col className=\"text\" xs=\"12\">\r\n                                        <span className=\"lv2\">\r\n                                            <FontAwesomeIcon icon={faAngleRight} />&nbsp;\r\n                                            {(textAbout.para3t as any)[this.lang]}\r\n                                        </span><br/><br/>\r\n                                        <span className=\"lv3\"><b>2015.05-2020.05</b><br/>\r\n                                            <span dangerouslySetInnerHTML={\r\n                                                {__html:(textAbout.para3c1 as any)[this.lang]}\r\n                                            }></span>\r\n                                        </span><br/><br/>\r\n                                        <span className=\"lv3\"><b>2013.03-2015.02</b><br/>\r\n                                            <span dangerouslySetInnerHTML={\r\n                                                {__html:(textAbout.para3c2 as any)[this.lang]}\r\n                                            }></span>\r\n                                        </span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","class ProjectItem {\r\n    icon: string;\r\n    title: string;\r\n    simpledesc: string;\r\n    platform: string;\r\n    tech: string;\r\n    period: string;\r\n    link: string[];\r\n    content: string;\r\n    dev: string;\r\n    image: Array<string>;\r\n\r\n    constructor(\r\n        icon: string,\r\n        title: string,\r\n        simpledesc: string,\r\n        platform: string,\r\n        tech: string,\r\n        period: string,\r\n        link: string[],\r\n        content: string,\r\n        dev: string,\r\n        image: Array<string>) {\r\n            this.icon = icon;\r\n            this.title = title;\r\n            this.simpledesc = simpledesc;\r\n            this.platform = platform;\r\n            this.tech = tech;\r\n            this.period = period;\r\n            this.link = link;\r\n            this.content = content;\r\n            this.dev = dev;\r\n            this.image = image;\r\n    }\r\n}\r\n\r\nexport default ProjectItem;","const projPersonal = [\r\n    {\r\n        icon: \"/project/banpick/icon.png\",\r\n        title: {\r\n            \"ko\":\"트위치 밴/픽 앱\",\r\n            \"jp\":\"\",\r\n            \"en\":\"Twitch BanPicker\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"트위치 스트리머의 컨텐츠에 활용될 수 있는 LoL 스타일 밴/픽 앱\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"ReactJS (TypeScript), JavaScript, Bootstrap, AWS S3, Jest, Redux\",\r\n        period: \"2020.11.09~2020.11.14 (5일 + 지속적으로 업데이트 진행 중)\",\r\n        link: [\"https://banpick.nira.one\",\r\n                \"https://github.com/prunusnira/twitch-banpicker\",\r\n                \"https://youtu.be/t37LvUoVcFc\"],\r\n        content: {\r\n            \"ko\":`(링크3: 실제 사용 예시 영상)\r\n                <ul>\r\n                    <li>트위치 스트리머의 컨텐츠에 활용할 수 있는 LoL 스타일의 밴/픽 앱</li>\r\n                    <li>시청자는 웹 앱에서 지정한 명령어를 채팅으로 입력하여 스트리머와 소통하면서 앱을 사용할 수 있음</li>\r\n                    <li>Twitch API, WebSocket 등을 활용하여 만든 앱</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ol>\r\n                    <li>React 17 기반의 CRA로 개발</li>\r\n                    <li>Twitch API로 채널 내 시청자들의 채팅 내용을 읽어 분석하고, 자체 명령어를 기반으로 동작을 수행</li>\r\n                    <li>AWS S3에 데이터를 올리고 CloudFront로 SSL을 지원하는 방식으로 배포</li>\r\n                    <li>저장이 필요한 데이터는 redux-persist를 사용</li>\r\n                </ol>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        image: [\r\n            \"/project/banpick/01.png\", \"/project/banpick/02.png\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/sin/icon.png\",\r\n        title: {\r\n            \"ko\":\"Skill Navigator\",\r\n            \"jp\":\"Skill Navigator\",\r\n            \"en\":\"Skill Navigator\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"리듬게임 GITADORA 시리즈의 기록 관리 사이트\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"ReactJS (TypeScript), Spring Boot (Kotlin), MariaDB, nginx, etc\",\r\n        period: \"2016.04~\",\r\n        link: [\"https://sin.nira.one\",\r\n                \"https://github.com/prunusnira/gdinfo-react\",\r\n                \"https://github.com/prunusnira/gdinfo-server\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>리듬게임 GITADORA 시리즈의 개인 기록을 관리해주는 웹 서비스</li>\r\n                    <li>공식에서 지원하지 않는 부가적인 기능을 제공</li>\r\n                    <li>(2020년 2월 기준) 등록 계정 수 3800 (한국/일본/기타 해외)</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`시스템 구성<br/>\r\n                서비스가 오래 지속되어 시스템에 변화가 많이 있었음\r\n                <ol>\r\n                    <li>1세대: Spring Framework 4 / JSP</li>\r\n                    <li>2세대: Spring Boot 2 / Thymeleaf / Vue.js (non SPA)</li>\r\n                    <li>3세대: Spring Boot 2 (Backend) + ReactJS (Frontend): GCE -> EC2 -> Lightsail</li>\r\n                    <li>4세대: Spring Boot 2 (Backend-AWS Lightsail) + ReactJS (Frontend-AWS S3)</li>\r\n                </ol>\r\n                사용 구조\r\n                <ul>\r\n                    <li>WebCrawler로 개인 기록을 수집하여 DB에 저장</li>\r\n                    <li>사용자가 특정 기능에 접근할 때 저장된 데이터에 대해 연산을 수행하여 사용자에게 정보를 제공</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        image: [\r\n            \"/project/sin/01.jpg\", \"/project/sin/02.png\", \"/project/sin/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/piu/icon.png\",\r\n        title: {\r\n            \"ko\":\"PIU 기록 관리 툴\",\r\n            \"jp\":\"PIU 記録管理ツール\",\r\n            \"en\":\"PIU Manager\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"리듬게임 Pump It Up의 기록 관리 사이트\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web, Android\",\r\n        tech: \"ReactJS (TypeScript), NodeJS (TypeScript), Android (Kotlin), AWS DynamoDB, AWS S3, AWS Lambda, etc\",\r\n        period: \"2018.07~\",\r\n        link: [\"https://piu.nira.one\",\r\n                \"https://play.google.com/store/apps/details?id=one.nira.piu\",\r\n                \"https://github.com/prunusnira/piumanager\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>리듬게임 Pump It Up의 개인 기록 관리를 자동화 한 웹 서비스</li>\r\n                    <li>유저들이 수동적으로 이미지를 수정하면서 사용하고 있는 서열표를 보고 자동화하면 어떨까 하는 생각으로 제작</li>\r\n                    <li>GitHub에서 PR을 받아 새로운 번역을 추가하기도 했음</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`Backend<br/>\r\n                <ul>\r\n                    <li>1세대: NodeJS, NGINX, MariaDB</li>\r\n                    <li>2세대: AWS Lambda, AWS S3, AWS DynamoDB</li>\r\n                </ul>\r\n                Front<br/>\r\n                <ul>\r\n                    <li>ReactJS, TypeScript</li>\r\n                </ul>\r\n                데이터\r\n                <ul>\r\n                    <li>패턴 데이터는 DB에서 관리하지만 개인 기록을 저장하는 데이터는 urlencoded 된 내용을 CSV 파일로 제공</li>\r\n                    <li>Kotlin을 사용해 WebView를 응용한 하이브리드 앱을 개발하여 PlayStore에 게시 (앱은 CSV파일을 내부적으로 관리함)</li>\r\n                </ul>\r\n                `,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/piu/01.jpg\", \"/project/piu/02.png\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/rhythm/icon.png\",\r\n        title: {\r\n            \"ko\":\"RhythmTracers (BMS Player)\",\r\n            \"jp\":\"RhythmTracers (BMS Player)\",\r\n            \"en\":\"RhythmTracers (BMS Player)\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"Unity로 제작된 BMS 구동기 (리듬게임)\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Unity3D (Windows)\",\r\n        tech: \"Unity3D\",\r\n        period: \"2020.08~\",\r\n        link: [\"https://youtu.be/lWQG4gIjGDM\",\r\n                \"https://github.com/prunusnira/rhythmspaceV2\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>Unity3D로 개발된 건반형 리듬게임</li>\r\n                    <li>BMS(Be-Music Script)를 읽어 게임을 진행</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                    <li>C# 기반의 BMS 처리 모듈을 제작<br/>\r\n                    (BMS에 대한 파싱, 노트 오브젝트 생성, 시간에 따른 노트 이동 등)</li>\r\n                    <li>플레이 시작 시간을 기준으로 곡의 재생 시간에 맞추어 노트 위치를 변경시키는 방식으로 구현</li>\r\n                    <li>외부에서 읽어들인 BMS의 목록은 SQLite로 관리</li>\r\n                    <li>사용자들이 만든 커스텀 스킨을 적용할 수 있는 시스템 제공</li>\r\n                    <li>싱크 조절이나 최대 프레임 레이트 등 역시 자유롭게 조절할 수 있게 만듦</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/rhythm/01.png\", \"/project/rhythm/02.png\",\r\n            \"/project/rhythm/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/launcher/icon.png\",\r\n        title: {\r\n            \"ko\":\"Drawing Launcher\",\r\n            \"jp\":\"Drawing Launcher\",\r\n            \"en\":\"Drawing Launcher\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"사용자의 제스처로 앱을 실행하는 안드로이드 런처\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Android\",\r\n        tech: \"Android (Java)\",\r\n        period: \"2016.08~2017.04\",\r\n        link: [\"https://play.google.com/store/apps/details?id=com.roxyeris.drawinglauncher\",\r\n                \"https://github.com/prunusnira/DrawingLauncher\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>화면에 제스처를 그려서 앱을 실행하거나 다른 동작을 수행하는 안드로이드 런처</li>\r\n                    <li>단순히 제스처 외에도 일반적인 앱 서랍 기능도 포함</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                <li>Android의 API로 제공되는 Gesture, Gesture Store를 사용하여 개발</li>\r\n                <li>Gesture는 Gesture Store에 포함되어 로컬 파일로 저장</li>\r\n                <li>앱 서랍은 GridLayout으로 표현하며 옵션에서 사이즈 변경이 가능</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/launcher/01.jpg\", \"/project/launcher/02.jpg\",\r\n            \"/project/launcher/03.jpg\", \"/project/launcher/04.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/ringtone/icon.png\",\r\n        title: {\r\n            \"ko\":\"Ringtone Randomizer\",\r\n            \"jp\":\"Ringtone Manager\",\r\n            \"en\":\"Ringtone Manager\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"구 안드로이드에서 사용된 벨소리 랜덤 재생 어플\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Android (Under 7)\",\r\n        tech: \"Android (Java), SQLite\",\r\n        period: \"2011~2012 / 2015\",\r\n        link: [\"https://play.google.com/store/apps/details?id=com.ring.roxyeris\",\r\n                \"https://github.com/prunusnira/ringtone-public\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>기기의 전화가 한 번 올 때마다 벨소리를 랜덤으로 바꿔주는 앱</li>\r\n                    <li>착신 상태를 확인하여 상태 변경에 따라 시스템 옵션을 변경</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                    <li>Android 내부의 Telephony Manager, Phone State Listener로 착신 상태 확인</li>\r\n                    <li>SQLite에 사용자가 벨소리로 지정하고 싶어하는 음악 파일을 등록 및 관리</li>\r\n                    <li>착신 상태가 변경될 때 마다 백그라운드 서비스로 벨소리를 변경하도록 처리</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        image: [\r\n            \"/project/ringtone/01.jpg\", \"/project/ringtone/02.jpg\",\r\n            \"/project/ringtone/03.jpg\", \"/project/ringtone/04.jpg\",\r\n            \"/project/ringtone/05.jpg\"\r\n        ]\r\n    }\r\n];\r\n\r\nexport default projPersonal;","const projNonPersonal = [\r\n    {\r\n        icon: \"/project/chatbot/icon.png\",\r\n        title: {\r\n            \"ko\":\"UniBot (인증서 채팅봇)\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"인증서에 대한 사용자들의 질문에 대해 답변을 자동으로 수행해주는 채팅봇\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Android / Web\",\r\n        tech: \"Android (Kotlin), ReactJS (TypeScript), Bootstrap, NGINX, Spring Boot, MariaDB\",\r\n        period: \"2019.10-2020.02\",\r\n        link: [\"https://chatapp.crosscert.com\"],\r\n                //\"https://play.google.com/store/apps/details?id=com.crosscert.aichat\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>인증서 서비스 사용자들에게 필요한 사용법, 질문에 대한 답변을 채팅봇으로 만든 서비스</li>\r\n                    <li>사용자들은 안드로이드 앱 혹은 PC 브라우저로 채팅봇에 접속하여 앱을 사용할 수 있었음</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[ 담당파트: 프론트엔드, ChatScript와 연결하는 중간서버, 안드로이드 앱, DB설계 ]</b>\r\n                <ul>\r\n                    <li>프론트엔드: ReactJS (TypeScript), Bootstrap (Reactstrap) 사용</li>\r\n                    <li>안드로이드: Kotlin으로 개발, WebView를 사용한 하이브리드 앱</li>\r\n                    <li>중간서버: SpringBoot(Kotlin)으로 개발, 백엔드 파트와 연동을 위해 구현. ChatScript와 통신을 위한 REST API 구축</li>\r\n                    <li>시스템 구성: NGINX위에 Reversed Proxy를 사용해 백엔드와 프론트엔드를 모두 구동</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/chatbot/01.jpg\", \"/project/chatbot/02.jpg\",\r\n            \"/project/chatbot/03.jpg\", \"/project/chatbot/04.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/backup/icon.png\",\r\n        title: {\r\n            \"ko\":\"인증서 클라우드 백업 서비스\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"브라우저 내부 저장소의 인증서를 백업하여 다른 기기에서 쓸 수 있게 해주는 서비스\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"Spring Boot 2 (Java), PostgreSQL\",\r\n        period: \"2019.12-2020.05\",\r\n        link: [],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>브라우저 내부 저장소에 저장되어있는 인증서를 서버에 백업하여 브라우저/기기에 상관없이 인증서를 사용할 수 있게 하는 서비스</li>\r\n                    <li>클라이언트는 기존 개발되어있는 가입자 소프트웨어를 확장하여 클라이언트를 만듦</li>\r\n                    <li>서버는 Spring Boot와 PostgreSQL을 사용하여 신규 제작</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[ 담당파트: 서버 및 DB ]</b>\r\n                <ul>\r\n                    <li>클라이언트와의 통신을 위해 RESTful API 형태로 개발</li>\r\n                    <li>HSM을 연동하여 보안성을 높임 (PKCS11 Provider)</li>\r\n                    <li>외부의 SMS 모듈을 사용한 SMS 인증 제공</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/backup/01.png\", \"/project/backup/02.jpg\", \"/project/backup/03.png\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/aicore/icon.png\",\r\n        title: {\r\n            \"ko\":\"AI 플랫폼 개발 및 채팅봇 개발\",\r\n            \"jp\":\"AIプラットフォーム\",\r\n            \"en\":\"AI Platform Development\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"AI Agent간 데이터 전송 개발, AI 플랫폼을 활용한 채팅봇 서비스 개발\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Java, Web\",\r\n        tech: \"Java, JavaScript, Tomcat 8, jQuery, HTML, Bootstrap\",\r\n        period: \"2015.5~2016.8\",\r\n        link: [\"https://aibrain.com/solutions/aicore-adaptive-interactive-cognitive-reasoning-engine/\"],\r\n        content: {\r\n            \"ko\":`대화 가능한 AI를 만들기 위한 자연언어 처리 프로젝트에 통신 모듈 개발로 참가<br/><br/>\r\n            (1) IAC(Inter-Agent Communication)\r\n            <ul>\r\n                <li>Planner에서 다른 에이전트로의 데이터 전송을 요청받음</li>\r\n                <li>JADE Framework에서 FIPA-ACL 메시지 구조에 맞는 통신용 메시지를 작성 및 전송</li>\r\n            </ul>\r\n            (2) AI 플랫폼을 활용한 채팅봇 개발\r\n            <ul>\r\n                <li>상기 플랫폼을 사용하여 클라이언트와 서버가 자연어로 대화를 주고받을 수 있는 채팅봇 서비스를 개발</li>\r\n                <li>TTS로 채팅 내용을 읽어주고 및 마이크를 사용해 말을 전달 할 수 있도록 개발</li>\r\n                <li>Vanilla JS로 개발하였으며 1년간 회사 홈페이지에서 서비스</li>\r\n            </ul>\r\n            * JADE Framework: Java로 작성된 Multi-Agent System 개발을 위한 프레임워크<br/>\r\n            * ACL: Agent Communication Language`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ 채팅봇 관련 ]\r\n                <ul>\r\n                    <li>Tomcat에 Natural Language Processing 엔진을 수정하여 구동</li>\r\n                    <li>TTS에는 Speech Synthesis API를 사용하여 개발</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/aicore/01.jpg\", \"/project/aicore/02.jpg\",\r\n            \"/project/aicore/03.jpg\", \"/project/aicore/04.jpg\",\r\n            \"/project/aicore/05.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/aigame/icon.png\",\r\n        title: {\r\n            \"ko\":\"AI 플랫폼을 활용한 데모 게임 개발\",\r\n            \"jp\":\"AIゲーム開発\",\r\n            \"en\":\"AI Game Development\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"NPC가 게임의 환경을 이해하고 다음 동작을 결정해 행동하는 데모 게임 개발\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Unity\",\r\n        tech: \"Java, C#, Spring Framework, Unity3D, MariaDB\",\r\n        period: \"2016.8~2017.2\",\r\n        link: [\"https://aibrain.com/products/futurable-true-ai-game/\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>회사가 보유한 AI 기술을 활용하여 데모 게임 개발을 진행</li>\r\n                    <li>NPC는 게임의 환경을 확인하여 현재 자신의 상태와 조건을 확인</li>\r\n                    <li>NPC의 다음 동작은 이러한 상태를 사용한 추론 결과에 따라 진행됨</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`(1) 클라이언트 (C#)\r\n            <ul>\r\n                <li>Google Play Service 연동, 서버 통신, UI, 디버깅</li>\r\n            </ul>\r\n            (2) 서버 (Java/Spring)\r\n            <ul>\r\n                <li>회사에서 제작한 AI 플랫폼을 서버에서 구동</li>\r\n                <li>유저별 대화내용 보존 및 대화 시스템 구성 및 개발</li>\r\n                <li>클라이언트와 서버간의 요청과 응답은 API 형태로 제작</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/aigame/01.jpg\", \"/project/aigame/02.jpg\",\r\n            \"/project/aigame/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/fautonomy/icon.png\",\r\n        title: {\r\n            \"ko\":\"AI 게임 개발 플러그인\",\r\n            \"jp\":\"AIゲームプラグイン開発\",\r\n            \"en\":\"AI Game Plugin Development\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Unity\",\r\n        tech: \"Java, C#, Spring Framework, Unity3D\",\r\n        period: \"2017~2019\",\r\n        link: [\"https://aibrain.com/products/futurable-true-ai-game/\",\r\n                \"https://assetstore.unity.com/packages/tools/ai/fautonomy-105444\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>AI 게임에 사용된 기술을 사용하여 Unity 개발자가 사용할 수 있는 플러그인을 제작</li>\r\n                    <li>개발자는 게임내의 환경 상황, 캐릭터의 시야나 인지에 대한 설정, 캐릭터가 수행하는 동작에 대한 조건 등을 플러그인에 입력</li>\r\n                    <li>사용자가 지정한 조건을 서버로 전송하여 Tensorflow로 학습</li>\r\n                    <li>학습의 결과로 나온 ProtoBuf 파일을 다운로드하여 클라이언트에 적용</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`(1) 클라이언트 (C#)\r\n            <ul>\r\n                <li>UI, 서버 통신, 디버그</li>\r\n            </ul>\r\n            (2) 서버 (Java/Spring)\r\n            <ul>\r\n                <li>서버에서 전송한 게임 환경 정보 등을 Process로 Python 코드를 실행하는 방식으로 수행</li>\r\n                <li>Python 코드는 Tensorflow를 실행하기 위한 코드가 들어있음</li>\r\n                <li>다수의 클라이언트에서 동시에 요청이 들어오는 경우 Queue로 관리</li>\r\n                <li>URL로 클라이언트에서 요청을 받고 처리함</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/fautonomy/01.jpg\", \"/project/fautonomy/02.jpg\",\r\n            \"/project/fautonomy/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/situation/icon.png\",\r\n        title: {\r\n            \"ko\":\"온톨로지 기반의 상황인지 모바일 프레임워크\",\r\n            \"jp\":\"\",\r\n            \"en\":\"Situation aware mobile framework based on ontology\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"논문 내용 증명 개발 지원으로 참여한 프로젝트\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Java, Android\",\r\n        tech: \"Java, OWL, SPARQL, Android, Protege, Apache Jena\",\r\n        period: \"2013\",\r\n        link: [\"https://www.researchgate.net/publication/264428214_Mobile_situation-aware_framework_for_developing_smart_mobile_software\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>모바일 환경에서 사용자의 현재 조건에 맞는 콘텐츠를 제공하는 프레임워크</li>\r\n                    <li>증명 지원을 위한 안드로이드 앱 개발과 이미 만들어진 프레임워크의 수정을 담당</li>\r\n                    <li>SCI-E 논문의 제 2저자로 참가</li>\r\n                    <li>* Mobile situation-aware framework for developing smart mobile software, Joonseok Park, Taejun Kang, Keunhyuk Yeom, Journal of Software: Evolution and Process, Vol. 26, Issue 12, 1 Dec 2014</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`[테스트용 음악 재생 어플]\r\n                    <ul>\r\n                        <li>스마트폰의 센서에서 데이터를 수집하고 온톨로지를 사용한 추론을 통해 결과값을 얻음</li>\r\n                        <li>도출된 결과 값을 이용하여 사용자에게 적합한 음악을 추천 및 재생</li>\r\n                    </ul>\r\n                    [프레임워크 수정]\r\n                    <ul>\r\n                        <li>온톨로지를 분석하여 사용자가 설정한 값을 한 번에 확인할 수 있는 트리 구조 생성 및 제공</li>\r\n                    </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/situation/01.jpg\", \"/project/situation/02.jpg\",\r\n            \"/project/situation/03.jpg\", \"/project/situation/04.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/bigdata/icon.png\",\r\n        title: {\r\n            \"ko\":\"Big Data 서비스 조합 프레임워크\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"빅 데이터의 수집, 가공, 표현을 수행하는 서비스들을 조합하여 하나의 데이터 통계 처리 시스템으로 만들어 주는 프레임워크 개발\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"PHP, JavaScript, jQuery, Apache HTTP Server, JBoss\",\r\n        period: \"2013~2014\",\r\n        link: [],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>Big Data의 사용을 수집, 처리, 표현의 3가지로 나누어 서비스들을 합쳐 하나의 시스템을 만들어내는 프레임워크</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                    <li>UML로 시스템 구조 설계에 참여</li>\r\n                    <li>jQuery를 사용하여 UI 일부와 관련 동작을 개발</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/bigdata/01.jpg\", \"/project/bigdata/02.jpg\"\r\n        ]\r\n    }\r\n];\r\n\r\nexport default projNonPersonal;","const textProject = {\r\n    clickToExpand: {\r\n        \"ko\":\"각 항목을 클릭해서 펼쳐보세요\",\r\n        \"jp\":\"\",\r\n        \"en\":\"Click to Expand\"\r\n    },\r\n    platform: {\r\n        \"ko\":\"플랫폼\",\r\n        \"jp\":\"プラットフォーム\",\r\n        \"en\":\"Platform\"\r\n    },\r\n    tech: {\r\n        \"ko\":\"사용 기술\",\r\n        \"jp\":\"スキル\",\r\n        \"en\":\"Skill\"\r\n    },\r\n    period: {\r\n        \"ko\":\"기간\",\r\n        \"jp\":\"開発期間\",\r\n        \"en\":\"Period\"\r\n    },\r\n    dev: {\r\n        \"ko\":\"개발\",\r\n        \"jp\":\"開発内容\",\r\n        \"en\":\"Development\"\r\n    }\r\n};\r\n\r\nexport default textProject;","import React, { Component, Fragment } from \"react\";\r\nimport { Card, CardBody, Col, Row } from \"reactstrap\";\r\nimport ProjectItem from \"../../data/projectItem\";\r\nimport textProject from \"../../text/project\";\r\nimport Language from \"../../tool/language\";\r\n\r\ninterface Props {\r\n    item: ProjectItem\r\n}\r\n\r\ninterface State {\r\n    isOpen: boolean\r\n}\r\n\r\nclass ProjectListObject extends Component<Props, State> {\r\n    private lang = Language.getLang();\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.changeOpen = this.changeOpen.bind(this);\r\n    }\r\n\r\n    state: State = {\r\n        isOpen: false\r\n    }\r\n\r\n    changeOpen = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const item = this.props.item;\r\n        return (\r\n            <Fragment>\r\n                <Row className=\"projobj-overall\">\r\n                    <Col xs=\"12\">\r\n                        <Row onClick={this.changeOpen}>\r\n                            <Col xs=\"2\">\r\n                                <img\r\n                                    alt=\"icon\"\r\n                                    className=\"projobj-icon\"\r\n                                    src={process.env.PUBLIC_URL+\"/img\"+item.icon} />\r\n                            </Col>\r\n                            <Col xs=\"10\">\r\n                                <Row>\r\n                                    <Col xs=\"9\" className=\"projobj-title\">\r\n                                        {item.title}\r\n                                    </Col>\r\n                                    <Col xs=\"3\">\r\n                                        {item.platform}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs=\"12\">\r\n                                        {item.simpledesc}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Card style={\r\n                            this.state.isOpen?\r\n                            {\r\n                                display: \"block\"\r\n                            }\r\n                            :\r\n                            {\r\n                                display: \"none\"\r\n                            }\r\n                        }>\r\n                            <CardBody className=\"projcard\">\r\n                                <Row className=\"paragraph\">\r\n                                    <Col xs=\"6\" className=\"text\">\r\n                                        <b>{(textProject.platform as any)[this.lang]}</b><br/>\r\n                                        <span className=\"lv3\">{item.platform}</span>\r\n                                    </Col>\r\n                                    <Col xs=\"6\" className=\"text\">\r\n                                        <b>{(textProject.period as any)[this.lang]}</b><br/>\r\n                                        <span className=\"lv3\">{item.period}</span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        <b>{(textProject.tech as any)[this.lang]}</b><br/>\r\n                                        <span className=\"lv3\">{item.tech}</span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        {\r\n                                            item.link.map((v, i) => {\r\n                                                return (\r\n                                                    <Fragment>\r\n                                                        <b>Link {i+1}</b>\r\n                                                        &nbsp;\r\n                                                        <span className=\"lv3\">\r\n                                                            <a\r\n                                                                key=\"link1\"\r\n                                                                target=\"_blank\"\r\n                                                                rel=\"noopener noreferrer\"\r\n                                                                href={v}>\r\n                                                                {v}\r\n                                                            </a>\r\n                                                        </span><br/>\r\n                                                    </Fragment>)\r\n                                            })\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        <span className=\"lv3\" dangerouslySetInnerHTML={{__html:item.content}}></span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        <b>{(textProject.dev as any)[this.lang]}</b><br/>\r\n                                        <span className=\"lv3\" dangerouslySetInnerHTML={{__html:item.dev}}></span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"paragraph\">\r\n                                    <Col className=\"text\">\r\n                                        <b>Images</b><br/>\r\n                                        <span className=\"lv3\">Click to open in the new tab</span><br/>\r\n                                        <span className=\"lv3\">\r\n                                            {\r\n                                                item.image.map((e) => {\r\n                                                    const imgUrl = process.env.PUBLIC_URL+\"/img\"+e;\r\n                                                    return (\r\n                                                        <a\r\n                                                            key={e}\r\n                                                            target=\"_blank\"\r\n                                                            rel=\"noopener noreferrer\"\r\n                                                            href={imgUrl}>\r\n                                                            <img alt=\"\" className=\"projobj-image\" src={imgUrl}/>\r\n                                                        </a>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row onClick={this.changeOpen}>\r\n                                    <Col xs=\"12\" className=\"text-center\">\r\n                                        <a href=\"#no_div\">▲ CLOSE ▲</a>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectListObject;","import React, { Component } from \"react\";\r\nimport ProjectItem from \"../../data/projectItem\";\r\nimport ProjectListObject from \"./projectListObject\";\r\n\r\ninterface Props {\r\n    list: Array<ProjectItem>\r\n}\r\n\r\nclass ProjectListWrapper extends Component<Props> {\r\n    render() {\r\n        return (\r\n            this.props.list.map(v => {\r\n                return <ProjectListObject item={v} />\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectListWrapper;","import React, {Component} from 'react';\r\nimport { Col, Row, Container, Nav, NavItem, TabContent, TabPane, NavLink } from 'reactstrap';\r\n\r\nimport ProjectItem from '../../data/projectItem';\r\n\r\nimport projPersonal from '../../data/projPersonal';\r\nimport projNonPersonal from '../../data/projNonPersonal';\r\n\r\nimport Language from '../../tool/language';\r\nimport ReactWOW from 'react-wow';\r\n\r\nimport './project.scss';\r\nimport ProjectListWrapper from './projectListWrapper';\r\nimport textProject from '../../text/project';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface State {\r\n    catName: string,\r\n    catSize: number,\r\n    catList: Array<ProjectItem>,\r\n    ppList: Array<ProjectItem>,\r\n    npList: Array<ProjectItem>,\r\n    catCurNum: number,\r\n    catPage: number\r\n}\r\n\r\nclass ProjectPage extends Component<{}, State> {\r\n    private lang: string = Language.getLang();\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.updateCatNum = this.updateCatNum.bind(this);\r\n        this.moveProject = this.moveProject.bind(this);\r\n    }\r\n\r\n    state: State = {\r\n        catName: \"\",\r\n        catSize: 0,\r\n        catList: Array<ProjectItem>(),\r\n        ppList: Array<ProjectItem>(),\r\n        npList: Array<ProjectItem>(),\r\n        catCurNum: 0,\r\n        catPage: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadProjectList(\"projPersonal\");\r\n    }\r\n\r\n    // 리스트를 현재 선택한 것만으로 변경함\r\n    loadProjectList(moduleName: string) {\r\n        // 작업 전에 현재 페이지 번호를 초기화\r\n        this.updateCatNum(0);\r\n\r\n        let m = null;\r\n        switch(moduleName) {\r\n            case \"projPersonal\":\r\n                m = projPersonal;\r\n                break;\r\n            case \"projNonPersonal\":\r\n                m = projNonPersonal;\r\n                break;\r\n        }\r\n\r\n        if(m != null) {\r\n            const size = m.length;\r\n            const plist = Array<ProjectItem>();\r\n            const nlist = Array<ProjectItem>();\r\n\r\n            projPersonal.forEach(e => {\r\n                plist.push(this.generateItemObject(e));\r\n            });\r\n            projNonPersonal.forEach(e => {\r\n                nlist.push(this.generateItemObject(e));\r\n            });\r\n\r\n            this.setState({\r\n                catName: moduleName,\r\n                catSize: size,\r\n                ppList: plist,\r\n                npList: nlist\r\n            });\r\n        }\r\n    }\r\n\r\n    generateItemObject(e: any) {\r\n        return new ProjectItem(\r\n            e.icon,\r\n            (e.title as any)[this.lang],\r\n            (e.simpledesc as any)[this.lang],\r\n            e.platform,\r\n            e.tech,\r\n            e.period,\r\n            e.link,\r\n            (e.content as any)[this.lang],\r\n            (e.dev as any)[this.lang],\r\n            e.image);\r\n    }\r\n\r\n    updateCatNum(num: number) {\r\n        this.setState({\r\n            catCurNum: num\r\n        });\r\n    }\r\n\r\n    moveProject(idx: number) {\r\n        const catlen = this.state.catSize;\r\n        let nextidx: number;\r\n\r\n        if(idx > catlen - 1) nextidx = catlen - 1;\r\n        else if(idx < 0) nextidx = 0;\r\n        else nextidx = idx;\r\n\r\n        this.setState({\r\n            catCurNum: nextidx\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"color-proj\">\r\n                <Container>\r\n                    <Row className=\"h100\" id=\"works\">\r\n                        <Col xs=\"12\">\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW animation=\"slideInLeft\">\r\n                                    <Col className=\"text text-left\" xs=\"12\">\r\n                                        <span className=\"lv1\">\r\n                                            <FontAwesomeIcon icon={faAngleDoubleRight} />&nbsp;\r\n                                            Works\r\n                                        </span><br/>\r\n                                        <span className=\"lv2\">\r\n                                            {(textProject.clickToExpand as any)[this.lang]}\r\n                                        </span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <ReactWOW animation=\"slideInLeft\">\r\n                                    <Col xs=\"12\">\r\n                                        <Nav tabs>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    className={(this.state.catPage === 0 ? \"active\":\"\")}\r\n                                                    onClick={() => {\r\n                                                    this.setState({\r\n                                                        catPage: 0\r\n                                                    });\r\n                                                }}>\r\n                                                    Personal Work\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                            <NavItem>\r\n                                                <NavLink\r\n                                                    className={(this.state.catPage === 1 ? \"active\":\"\")}\r\n                                                    onClick={() => {\r\n                                                    this.setState({\r\n                                                        catPage: 1\r\n                                                    });\r\n                                                }}>\r\n                                                    Non-Personal Work\r\n                                                </NavLink>\r\n                                            </NavItem>\r\n                                        </Nav>\r\n                                        <TabContent activeTab={this.state.catPage}>\r\n                                            <TabPane tabId={0}>\r\n                                                <ProjectListWrapper list={this.state.ppList}/>\r\n                                            </TabPane>\r\n                                            <TabPane tabId={1}>\r\n                                                <ProjectListWrapper list={this.state.npList}/>\r\n                                            </TabPane>\r\n                                        </TabContent>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectPage;","import React, {Component, Fragment} from 'react';\r\n\r\nclass Experience extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Experience;","import { faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport ReactWOW from \"react-wow\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport \"./link.scss\";\r\n\r\nclass Link extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"color-link\">\r\n                <Container>\r\n                    <Row className=\"h100\" id=\"link\">\r\n                        <Col xs=\"12\">\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW animation=\"slideInLeft\">\r\n                                    <Col className=\"text text-left\" xs=\"12\">\r\n                                        <span className=\"lv1\">\r\n                                            <FontAwesomeIcon icon={faAngleDoubleRight} />&nbsp;\r\n                                            Links\r\n                                        </span>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                            <Row className=\"paragraph\">\r\n                                <ReactWOW animation=\"slideInLeft\">\r\n                                    <Col xs=\"12\">\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- Blog</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://arincblossom.wordpress.com\">\r\n                                                        https://arincblossom.wordpress.com</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- GitHub</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://github.com/prunusnira\">\r\n                                                        https://github.com/prunusnira</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- Skill Navigator</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://sin.nira.one\">\r\n                                                        https://sin.nira.one</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- PIU Manager</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://piu.nira.one\">\r\n                                                        https://piu.nira.one</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs=\"12\" className=\"linktext\">\r\n                                                <b>- Twitch BanPicker</b>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"linkpadding\">\r\n                                            <Col xs=\"12\">\r\n                                                <a\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href=\"https://banpick.nira.one\">\r\n                                                        https://banpick.nira.one</a>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </ReactWOW>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Link;","import React, {Component, Fragment} from 'react';\r\n\r\nimport Landing from './landing/landing';\r\nimport FixedTop from './fixedTop';\r\nimport FixedBottom from './fixedBottom';\r\nimport About from './profile/profile';\r\nimport ProjectPage from './project/project';\r\nimport Experience from './experience';\r\nimport Link from './link/link';\r\n\r\nclass Index extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <FixedTop />\r\n                <Landing />\r\n                <About />\r\n                <ProjectPage />\r\n                <Experience />\r\n                <Link />\r\n                <FixedBottom />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React from 'react';\nimport Index from './page/index';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './App.scss';\nimport 'animate.css';\n\nconst App: React.FC = () => {\n  return (\n    <Index />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}