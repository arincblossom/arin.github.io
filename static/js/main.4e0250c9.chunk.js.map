{"version":3,"sources":["styled/styledCommon.ts","page/landing/landing.tsx","styled/styledOverall.ts","styled/styledHeader.ts","page/fixedTop.tsx","page/fixedBottom.tsx","text/about.ts","page/about/about.tsx","data/projectItem.ts","data/projPersonal.ts","data/projNonPersonal.ts","tool/language.ts","text/project.ts","page/project/projectListObject.tsx","page/project/projectListWrapper.tsx","page/project/project.tsx","page/link/link.tsx","data/techStackData.ts","page/techStack/techStackItem.tsx","page/techStack/techStackCard.tsx","page/techStack/techStack.tsx","page/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["defaultStyle","component","defaultProps","ItemRow","styled","div","props","keepDirHor","setVertical","ItemCol","isFlatUnderLg","widthSize","size","Container","BodyContent","MainBtn","button","bgColor","txtColor","color","IconBase","img","iconSize","sizeType","rtn","Landing","className","id","animation","delay","icon","faAngleDoubleDown","to","style","width","src","process","maxWidth","OuterBox","Header","header","Center","footer","HeaderNav","nav","NavTitle","NavMenu","ul","isToggled","NavToggle","NavItemX","li","isOpen","input","FixedTop","useState","setOpen","Navbar","onClick","FixedBottom","position","bottom","right","textAlign","fontSize","Component","textAbout","para1t","para1c","para2t","para2c","para3t","para3c1","para3c2","main","About","faAngleDoubleRight","paddingTop","paddingBottom","faAngleRight","padding","dangerouslySetInnerHTML","__html","ProjectItem","title","simpledesc","platform","tech","period","link","content","dev","image","this","projPersonal","projNonPersonal","Language","type","eraseCookie","createCookie","window","location","reload","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","textProject","clickToExpand","ProjectListObject","lang","getLang","changeOpen","alt","item","display","map","v","key","target","rel","href","e","imgUrl","ProjectListWrapper","list","ProjectPage","setCatName","setCatSize","Array","ppList","setPPList","npList","setNPList","setCatNum","catPage","setCatPage","useEffect","loadProjectList","moduleName","m","plist","nlist","forEach","push","generateItemObject","Nav","tabs","NavItem","NavLink","TabContent","activeTab","TabPane","tabId","Link","techStackData","cont","desc","TechStackItem","height","TechStackCard","Card","CardHeader","CardBody","Row","x","Col","xs","md","lg","TechStack","d","Index","exact","path","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e0250c9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// 아이템에 대한 기본값을 설정하는 메소드\r\ntype DefaultStyle<T, K> = T & { defaultProps: K }\r\n\r\nfunction defaultStyle<T, K>(component: T, defaultProps: K): DefaultStyle<T, K> {\r\n    (component as DefaultStyle<T, K>).defaultProps = defaultProps\r\n    return component as DefaultStyle<T, K>\r\n}\r\n\r\n// keepDirHor: 줄어들어도 여전히 horizontal을 유지\r\nconst ItemRowBase = styled.div<{keepDirHor: boolean, setVertical: boolean}>`\r\n    width: 100%;\r\n    display: flex;\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n    flex-wrap: wrap;\r\n\r\n    ${props => props.keepDirHor?\r\n        ``\r\n        :\r\n        `@media screen and (max-width: 1199px) {\r\n            flex-direction: column;\r\n        }`\r\n    }\r\n\r\n    ${props => props.setVertical ?\r\n        `flex-direction: column;`\r\n        :\r\n        ``\r\n    }\r\n`\r\n\r\nexport const ItemRow = defaultStyle(ItemRowBase, {keepDirHor: false, setVertical: false})\r\n\r\n// 사이즈는 10 기준으로 계산함\r\nconst ItemColBase = styled.div<{size: number, isFlatUnderLg: boolean}>`\r\n    ${props => props.isFlatUnderLg ?\r\n        `\r\n        @media screen and (max-width: 1199px) {\r\n            width: 100%;\r\n        }\r\n        @media screen and (min-width: 1200px) {\r\n            ${widthSize(props.size)}\r\n        }\r\n        `\r\n        :\r\n        `${widthSize(props.size)}`\r\n    }   \r\n`\r\n\r\nexport const ItemCol = defaultStyle(ItemColBase, { size: 10, isFlatUnderLg: false })\r\n\r\nconst widthSize = (size: number) => {\r\n    return `width: ${size*10}%;`\r\n}\r\n\r\nexport const Container = styled.div`\r\n    max-width: 1200px;\r\n    width: 100%;\r\n`\r\n\r\nexport const BodyHeader = styled.div`\r\n    width: 100%;\r\n    background-color: #252525;\r\n    color: white;\r\n    font-weight: bold;\r\n    padding: 10px;\r\n`\r\n\r\nexport const BodyContent = styled.div`\r\n    width: 100%;\r\n    background-color: #414141;\r\n    color: white;\r\n    padding: 10px;\r\n`\r\n\r\nexport const Button = styled.button`\r\n    color: black;\r\n    border: 1px solid black;\r\n    background-color: #dddddd;\r\n    padding: 10px;\r\n`\r\n\r\nexport const ButtonSM = styled.button`\r\n    color: black;\r\n    border: 1px solid black;\r\n    background-color: #dddddd;\r\n`\r\n\r\nconst MainBtnBase = styled.button<{bgColor: string, txtColor: string}>`\r\n    background-color: ${props => props.bgColor};\r\n    color: ${props => props.txtColor};\r\n    width: 100%;\r\n    height: 100%;\r\n`\r\n\r\nexport const MainBtn = defaultStyle(MainBtnBase, { bgColor: '#dddddd', color: 'black' })\r\n\r\nconst IconBase = styled.img<{sizeType: string}>`\r\n    ${props => `${iconSize(props.sizeType)}`}\r\n`\r\n\r\nconst iconSize = (sizeType: string) => {\r\n    let rtn = ''\r\n    switch(sizeType) {\r\n        case 'lg':\r\n            rtn = `width: 50px;\r\n            height: 50px;`\r\n            break\r\n        case 'sm':\r\n        default:\r\n            rtn = `width: 35px;\r\n            height: 35px;`\r\n            break\r\n    }\r\n    return rtn\r\n}\r\n\r\nexport const Icon = defaultStyle(IconBase, {sizeType: 'sm'})","import React from 'react'\r\nimport ReactWOW from 'react-wow'\r\nimport \"./landing.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Container, ItemCol, ItemRow, MainBtn } from '../../styled/styledCommon'\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <Container className='bgcolor' id=\"landing\">\r\n            <ItemRow className=\"paragraph\">\r\n                <ReactWOW animation=\"fadeInDown\" delay=\"0.5s\">\r\n                    <ItemCol className=\"text text-center\" size={10}>\r\n                        <span className=\"lv1\">Tae Jun Kang</span><br/>\r\n                        <span className=\"lv3\">코드로 많은 사람들에게 다가가고 싶은 개발자입니다</span><br/>\r\n                        <span className=\"lv4\">contact: tjkang0207@gmail.com</span>\r\n                    </ItemCol>\r\n                </ReactWOW>\r\n            </ItemRow>\r\n            <ItemRow>\r\n                <ReactWOW animation=\"fadeInDown\" delay=\"0.5s\">\r\n                    <ItemCol className=\"text text-center arrow-down-size\" size={10}>\r\n                        <FontAwesomeIcon icon={faAngleDoubleDown} />\r\n                    </ItemCol>\r\n                </ReactWOW>\r\n            </ItemRow>\r\n            <ItemRow>\r\n                <ReactWOW animation=\"fadeInDown\" delay=\"0.5s\">\r\n                    <ItemRow>\r\n                        <ItemCol isFlatUnderLg={true} size={5}>\r\n                            <Link to='/about' style={{width: '100%'}}>\r\n                                <MainBtn className='text' bgColor='#eef3ab' txtColor='black'>\r\n                                    <ItemRow>\r\n                                        <ItemCol size={5} isFlatUnderLg={true}>\r\n                                            <img src={`${process.env.PUBLIC_URL}/img/main/icon_about.png`}\r\n                                                style={{maxWidth: '75px'}} />\r\n                                        </ItemCol>\r\n                                        <ItemCol size={5} isFlatUnderLg={true}>\r\n                                            <ItemRow>\r\n                                                <span className='lv2'>About</span>\r\n                                            </ItemRow>\r\n                                            <ItemRow>\r\n                                                <span className='lv4'>간단한 소개입니다</span>\r\n                                            </ItemRow>\r\n                                        </ItemCol>\r\n                                    </ItemRow>\r\n                                </MainBtn>\r\n                            </Link>\r\n                        </ItemCol>\r\n                        <ItemCol isFlatUnderLg={true} size={5}>\r\n                            <Link to='/tech' style={{width: '100%'}}>\r\n                                <MainBtn className='text' bgColor='#eef3ab' txtColor='black'>\r\n                                    <ItemRow>\r\n                                        <ItemCol size={5} isFlatUnderLg={true}>\r\n                                            <img src={`${process.env.PUBLIC_URL}/img/main/icon_tech.png`}\r\n                                                style={{maxWidth: '75px'}} />\r\n                                        </ItemCol>\r\n                                        <ItemCol size={5} isFlatUnderLg={true}>\r\n                                            <ItemRow>\r\n                                                <span className='lv2'>Tech Stack</span>\r\n                                            </ItemRow>\r\n                                            <ItemRow>\r\n                                                <span className='lv4'>프로젝트에서 한 번쯤은 사용해본 것들</span>\r\n                                            </ItemRow>\r\n                                        </ItemCol>\r\n                                    </ItemRow>\r\n                                </MainBtn>\r\n                            </Link>\r\n                        </ItemCol>\r\n                        <ItemCol isFlatUnderLg={true} size={5}>\r\n                            <Link to='/project' style={{width: '100%'}}>\r\n                                <MainBtn className='text' bgColor='#eef3ab' txtColor='black'>\r\n                                    <ItemRow>\r\n                                        <ItemCol size={5} isFlatUnderLg={true}>\r\n                                            <img src={`${process.env.PUBLIC_URL}/img/main/icon_proj.png`}\r\n                                                style={{maxWidth: '75px'}} />\r\n                                        </ItemCol>\r\n                                        <ItemCol size={5} isFlatUnderLg={true}>\r\n                                            <ItemRow>\r\n                                                <span className='lv2'>Project</span>\r\n                                            </ItemRow>\r\n                                            <ItemRow>\r\n                                                <span className='lv4'>업무/개인으로 진행한 프로젝트 모음</span>\r\n                                            </ItemRow>\r\n                                        </ItemCol>\r\n                                    </ItemRow>\r\n                                </MainBtn>\r\n                            </Link>\r\n                        </ItemCol>\r\n                        <ItemCol isFlatUnderLg={true} size={5}>\r\n                            <Link to='/link' style={{width: '100%'}}>\r\n                                <MainBtn className='text' bgColor='#eef3ab' txtColor='black'>\r\n                                    <ItemRow>\r\n                                        <ItemCol size={5} isFlatUnderLg={true}>\r\n                                            <img src={`${process.env.PUBLIC_URL}/img/main/icon_link.png`}\r\n                                                style={{maxWidth: '75px'}} />\r\n                                        </ItemCol>\r\n                                        <ItemCol size={5} isFlatUnderLg={true}>\r\n                                            <ItemRow>\r\n                                                <span className='lv2'>Link</span>\r\n                                            </ItemRow>\r\n                                            <ItemRow>\r\n                                                <span className='lv4'>개인 프로젝트, 블로그, 깃허브 링크</span>\r\n                                            </ItemRow>\r\n                                        </ItemCol>\r\n                                    </ItemRow>\r\n                                </MainBtn>\r\n                            </Link>\r\n                        </ItemCol>\r\n                    </ItemRow>\r\n                </ReactWOW>\r\n            </ItemRow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Landing","import styled from \"styled-components\";\r\n\r\nexport const OuterBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const Header = styled.header`\r\n    flex: 0 0 auto;\r\n`\r\n\r\nexport const Footer = styled.footer`\r\n    flex: 0 0 auto;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n\tbackground-color: #111;\r\n\tfont-size: 80%;\r\n\r\n    a {\r\n        color:#aaaaff;\r\n    }\r\n    \r\n    span {\r\n        color:#dddddd;\r\n    }\r\n`\r\n\r\nexport const Center = styled.div`\r\n    flex: 1 0 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n\r\n    height: calc(100vh - 46px);\r\n    overflow-y: auto;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const HeaderNav = styled.nav`\r\n    background-color: #353a40\r\n`\r\n\r\nexport const NavBar = styled.div`\r\n    padding: 10px 20px 10px 20px;\r\n\r\n    @media screen and (max-width: 1199px) {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        flex-direction: vertical;\r\n    }\r\n    @media screen and (min-width: 1200px) {\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n`\r\n\r\nexport const NavTitle = styled.div`\r\n    font-size: 20px;\r\n`\r\n\r\nexport const NavMenu = styled.ul<{isToggled: boolean}>`\r\n    margin: 0px !important;\r\n    @media screen and (max-width: 1199px) {\r\n        ${props => props.isToggled ?\r\n            `display: block;\r\n            width: 100%;\r\n            list-style-type: none;`\r\n            :\r\n            `display: none;`\r\n        }\r\n    }\r\n\r\n    @media screen and (min-width: 1200px) {\r\n        display: flex;\r\n        align-items: flex-end;\r\n        list-style-type: none;\r\n    }\r\n`\r\n\r\nexport const NavToggle = styled.div`\r\n    @media screen and (min-width: 1200px) {\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport const NavItemX = styled.li`\r\n    order: 3;\r\n    width: 100%;\r\n    flex: 1 1 auto;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n\r\n    @media screen and (min-width: 1200px) {\r\n        display: block;\r\n        align-items: flex-start;\r\n    }\r\n`\r\n\r\nexport const NavSubOuter = styled.ul<{isOpen: boolean}>`\r\n    list-style-type: disc;\r\n    background-color: white;\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n    border: 1px solid grey;\r\n    border-radius: 10px;\r\n    ${props => props.isOpen ? 'display: block;' : 'display: none;'}\r\n`\r\n\r\nexport const NavSubItem = styled.li`\r\n    a {\r\n        color: black;\r\n    }\r\n`\r\n\r\nexport const ImageTitle = styled.img`\r\n    max-height: 48px;\r\n`\r\n\r\nexport const ImageIcon = styled.img`\r\n    width: 32px;\r\n    height: 32px;\r\n    display: float;\r\n    margin-right: 10px;\r\n`\r\n\r\nexport const NavMenuIcon = styled.div`\r\n    @media screen and (min-width: 1200px) {\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport const SearchBarSection = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n`\r\n\r\nexport const SearchBar = styled.input`\r\n    flex: 1 0 auto\r\n`","import React, {useState} from 'react';\r\n\r\nimport \"./css/navbar.scss\";\r\nimport Language from '../tool/language';\r\nimport { Header } from '../styled/styledOverall';\r\nimport { HeaderNav, NavItemX, NavMenu, NavTitle, NavToggle } from '../styled/styledHeader';\r\nimport { Navbar } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface State {\r\n    isOpen: boolean\r\n}\r\n\r\nconst FixedTop = () => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setOpen(!isOpen);\r\n    }\r\n\r\n    return (\r\n        <Header>\r\n            <HeaderNav>\r\n                <Navbar className=\"transparent\">\r\n                    <NavTitle>\r\n                        <Link to=\"/\"\r\n                            className=\"nav-color\">\r\n                            Nira\r\n                        </Link>\r\n                    </NavTitle>\r\n                    <NavToggle onClick={toggle}\r\n                            className=\"nav-color\">\r\n                        menu\r\n                    </NavToggle>\r\n                    <NavMenu isToggled={isOpen}>\r\n                        <NavItemX>\r\n                            <Link to=\"/about\"\r\n                                className=\"nav-color\">\r\n                                About\r\n                            </Link>\r\n                        </NavItemX>\r\n                        <NavItemX>\r\n                            <Link to=\"/project\"\r\n                                className=\"nav-color\">\r\n                                Project\r\n                            </Link>\r\n                        </NavItemX>\r\n                        <NavItemX>\r\n                            <Link to=\"/tech\"\r\n                                className=\"nav-color\">\r\n                                Tech\r\n                            </Link>\r\n                        </NavItemX>\r\n                        <NavItemX>\r\n                            <Link to=\"/link\"\r\n                                className=\"nav-color\">\r\n                                Link\r\n                            </Link>\r\n                        </NavItemX>\r\n                    </NavMenu>\r\n                </Navbar>\r\n            </HeaderNav>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default FixedTop;","import React, {Component} from 'react';\r\n\r\nclass FixedBottom extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\"\r\n                style={{\r\n                    position:\"fixed\",\r\n                    bottom:\"10px\",\r\n                    right:\"10px\",\r\n                    textAlign:\"right\",\r\n                    color: \"white\",\r\n                    fontSize: \"80%\"\r\n                }}\r\n            >\r\n                (c) 2020 Prunus Nira<br/>\r\n                Hosted on github.io, Created with ReactJS, styled-components\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FixedBottom;","const textAbout = {\r\n    para1t: {\r\n        \"ko\":\"소개\",\r\n        \"jp\":\"About\",\r\n        \"en\":\"About\"\r\n    },\r\n    para1c: {\r\n        \"ko\":`- 개발 그 자체에 흥미를 갖고 다양한 분야에 대해 공부하고 있는 개발자입니다<br/>\r\n                - 현재는 웹 개발에 재미를 느끼고 웹에 집중하기 위한 공부를 하고 있습니다<br/>\r\n                - 업무 및 개인 프로젝트로 웹 서비스를 만들어 서비스 하고 있습니다<br/>\r\n                - 이전에는 업무에서 Java/Kotlin을 이용하여 서버, 사내 플랫폼, 게임 등 다양한 프로젝트를 경험했습니다<br/>\r\n                - Android 개발 및 앱 출시 경험도 있으며, Unity를 이용한 게임 제작 등에도 흥미가 있습니다<br/><br/>\r\n                \r\n                개발 이외로는 음악과 게임을 좋아합니다<br/>\r\n                음악은 장르를 가리지 않고 다양하게 듣는것을 좋아하며<br/>\r\n                게임은 콘솔, 스팀 등의 패키지 게임이나 리듬게임을 즐겨 하는 편입니다`,\r\n        \"jp\":`長くも薄広く勉強しましたが、最近はWebに興味を持っている雑食デベロッパーです`,\r\n        \"en\":``\r\n    },\r\n    para2t: {\r\n        \"ko\":\"잠깐이나마 사용해 본 것들\",\r\n        \"jp\":\"使ってみたこと\",\r\n        \"en\":\"Experienced Tech\"\r\n    },\r\n    para2c: {\r\n        \"ko\":\"사용한 프로젝트는 상단 메뉴에서 Project를 참고해주세요\",\r\n        \"jp\":\"詳しいポートフォリオはWorksを参考にしてください\",\r\n        \"en\":\"Please check 'Works' for detailed portfolio\"\r\n    },\r\n    para3t: {\r\n        \"ko\":\"일 해본 경험\",\r\n        \"jp\":\"お仕事の経験\",\r\n        \"en\":\"Work Experiences\"\r\n    },\r\n    para3c1: {\r\n        \"ko\":`근무처: 한국전자인증<br/>\r\n                직종: 금융, 보안, AI<br/>\r\n                업무: R&D, 소프트웨어 개발<br/>\r\n                (석사 후 전문연구요원으로 대체 복무 진행)`,\r\n        \"jp\":\"Crosscert Inc\",\r\n        \"en\":\"Crosscert Inc\"\r\n    },\r\n    para3c2: {\r\n        \"ko\":`근무처: 부산대학교 전기전자컴퓨터공학부 소프트웨어공학 연구실<br/>\r\n            최종학력: MS. in Computer Science and Engineering<br/>\r\n            업무: R&D`,\r\n        \"jp\":\"\",\r\n        \"en\":\"Software Engineering Lab, Pusan Nat'l Univ. Electric-Electronic-Computer Engineering Dept. Majored in Computer Engineering\"\r\n    },\r\n    main: {\r\n        \"ko\":\"주 사용 기술\",\r\n        \"jp\":\"\",\r\n        \"en\":\"\"\r\n    }\r\n};\r\n\r\nexport default textAbout;","import React from 'react'\r\nimport ReactWOW from 'react-wow'\r\nimport \"./about.css\"\r\nimport textAbout from '../../text/about'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleRight, faAngleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { Container, ItemCol, ItemRow } from '../../styled/styledCommon'\r\n\r\nconst About = () => {\r\n    const lang = \"ko\"\r\n\r\n    return (\r\n        <Container className='bgcolor' id=\"profile\">\r\n            <ItemRow className=\"paragraph text text-left\">\r\n                <span className=\"lv2\">\r\n                    <FontAwesomeIcon icon={faAngleDoubleRight} />&nbsp;\r\n                    About\r\n                </span>\r\n            </ItemRow>\r\n            <section style={{paddingTop: '10px', paddingBottom: '10px'}}>\r\n                <ItemRow className=\"paragraph text\">\r\n                    <span className=\"lv3\">\r\n                        <FontAwesomeIcon icon={faAngleRight} />&nbsp;\r\n                        {(textAbout.para1t as any)[lang]}\r\n                    </span>\r\n                </ItemRow>\r\n                <ItemRow className=\"text\" style={{padding: '10px'}}>\r\n                    <span className=\"lv4\" dangerouslySetInnerHTML={\r\n                        {__html: (textAbout.para1c as any)[lang]}\r\n                    }></span>\r\n                </ItemRow>\r\n            </section>\r\n            <section style={{paddingTop: '10px', paddingBottom: '10px'}}>\r\n                <ItemRow className=\"paragraph text\">\r\n                    <span className=\"lv3\">\r\n                        <FontAwesomeIcon icon={faAngleRight} />&nbsp;\r\n                        {(textAbout.para3t as any)[lang]}\r\n                    </span>\r\n                </ItemRow>\r\n                <ItemRow className=\"text\" style={{padding: '10px'}}>\r\n                    <span className=\"lv4\"><b>2015.05-2020.05</b><br/>\r\n                        <span dangerouslySetInnerHTML={\r\n                            {__html:(textAbout.para3c1 as any)[lang]}\r\n                        }></span>\r\n                    </span>\r\n                </ItemRow>\r\n                <ItemRow className=\"text\" style={{padding: '10px'}} setVertical={true}>\r\n                    <span className=\"lv4\">\r\n                        <FontAwesomeIcon icon={faAngleRight} />&nbsp;\r\n                        {(textAbout.main as any)[lang]}\r\n                    </span>\r\n                    <span className=\"lv4\">\r\n                        JS, TS (for Web Frontend) / Java, Kotlin (for Server, Android) / Unity3D (for Game)\r\n                    </span>\r\n                </ItemRow>\r\n                <ItemRow className=\"text\" style={{padding: '10px'}}>\r\n                    <span className=\"lv4\"><b>2013.03-2015.02</b><br/>\r\n                        <span dangerouslySetInnerHTML={\r\n                            {__html:(textAbout.para3c2 as any)[lang]}\r\n                        }></span>\r\n                    </span>\r\n                </ItemRow>\r\n                <ItemRow className=\"text\" style={{padding: '10px'}} setVertical={true}>\r\n                    <span className=\"lv4\">\r\n                        <FontAwesomeIcon icon={faAngleRight} />&nbsp;\r\n                        {(textAbout.main as any)[lang]}\r\n                    </span>\r\n                    <span className=\"lv4\">\r\n                        JS (for Web) / Java (for RND, Android)\r\n                    </span>\r\n                </ItemRow>\r\n            </section>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About","class ProjectItem {\r\n    icon: string;\r\n    title: string;\r\n    simpledesc: string;\r\n    platform: string;\r\n    tech: string;\r\n    period: string;\r\n    link: string[];\r\n    content: string;\r\n    dev: string;\r\n    image: Array<string>;\r\n\r\n    constructor(\r\n        icon: string,\r\n        title: string,\r\n        simpledesc: string,\r\n        platform: string,\r\n        tech: string,\r\n        period: string,\r\n        link: string[],\r\n        content: string,\r\n        dev: string,\r\n        image: Array<string>) {\r\n            this.icon = icon;\r\n            this.title = title;\r\n            this.simpledesc = simpledesc;\r\n            this.platform = platform;\r\n            this.tech = tech;\r\n            this.period = period;\r\n            this.link = link;\r\n            this.content = content;\r\n            this.dev = dev;\r\n            this.image = image;\r\n    }\r\n}\r\n\r\nexport default ProjectItem;","const projPersonal = [\r\n    {\r\n        icon: \"/project/banpick/icon.png\",\r\n        title: {\r\n            \"ko\":\"트위치 밴/픽 앱\",\r\n            \"jp\":\"\",\r\n            \"en\":\"Twitch BanPicker\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"트위치 스트리머의 컨텐츠에 활용될 수 있는 LoL 스타일 밴/픽 앱\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"ReactJS (TypeScript), JavaScript, Bootstrap, AWS S3, Jest, Redux\",\r\n        period: \"2020.11.09~2020.11.14 (5일 + 지속적으로 업데이트 진행 중)\",\r\n        link: [\"https://banpick.nira.one\",\r\n                \"https://github.com/prunusnira/twitch-banpicker\",\r\n                \"https://youtu.be/t37LvUoVcFc\"],\r\n        content: {\r\n            \"ko\":`(링크3: 실제 사용 예시 영상)\r\n                <ul>\r\n                    <li>트위치 스트리머의 컨텐츠에 활용할 수 있는 LoL 스타일의 밴/픽 앱</li>\r\n                    <li>시청자는 웹 앱에서 지정한 명령어를 채팅으로 입력하여 스트리머와 소통하면서 앱을 사용할 수 있음</li>\r\n                    <li>Twitch API, WebSocket 등을 활용하여 만든 앱</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ol>\r\n                    <li>Twitch API로 채널 내 시청자들의 채팅 내용을 읽어 분석하고, 자체 명령어를 기반으로 동작을 수행</li>\r\n                    <li>AWS S3에 데이터를 올리고 CloudFront로 SSL을 지원하는 방식으로 배포</li>\r\n                    <li>저장이 필요한 데이터는 redux-persist를 사용</li>\r\n                </ol>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        image: [\r\n            \"/project/banpick/01.png\", \"/project/banpick/02.png\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/sin/icon.png\",\r\n        title: {\r\n            \"ko\":\"Skill Navigator\",\r\n            \"jp\":\"Skill Navigator\",\r\n            \"en\":\"Skill Navigator\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"리듬게임 GITADORA 시리즈의 기록 관리 사이트\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"ReactJS (TypeScript), Spring Boot (Kotlin), MariaDB, nginx, etc\",\r\n        period: \"2016.04~\",\r\n        link: [\"https://sin.nira.one\",\r\n                \"https://github.com/prunusnira/gdinfo-react\",\r\n                \"https://github.com/prunusnira/gdinfo-server\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>리듬게임 GITADORA 시리즈의 개인 기록을 관리해주는 웹 서비스</li>\r\n                    <li>공식에서 지원하지 않는 부가적인 기능을 제공</li>\r\n                    <li>(2020년 2월 기준) 등록 계정 수 3800 (한국/일본/기타 해외)</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`시스템 구성<br/>\r\n                서비스가 오래 지속되어 시스템에 변화가 많이 있었음\r\n                <ol>\r\n                    <li>1세대: Spring Framework 4 / JSP</li>\r\n                    <li>2세대: Spring Boot 2 / Thymeleaf / Vue.js (non SPA)</li>\r\n                    <li>3세대: Spring Boot 2 (Backend) + ReactJS (Frontend): GCE -> EC2 -> Lightsail</li>\r\n                    <li>4세대: Spring Boot 2 (Backend-AWS Lightsail) + ReactJS (Frontend-AWS S3)</li>\r\n                </ol>\r\n                사용 구조\r\n                <ul>\r\n                    <li>WebCrawler로 개인 기록을 수집하여 DB에 저장</li>\r\n                    <li>사용자가 특정 기능에 접근할 때 저장된 데이터에 대해 연산을 수행하여 사용자에게 정보를 제공</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        image: [\r\n            \"/project/sin/01.jpg\", \"/project/sin/02.png\", \"/project/sin/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/piu/icon.png\",\r\n        title: {\r\n            \"ko\":\"PIU 기록 관리 툴\",\r\n            \"jp\":\"PIU 記録管理ツール\",\r\n            \"en\":\"PIU Manager\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"리듬게임 Pump It Up의 기록 관리 사이트\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web, Android\",\r\n        tech: \"ReactJS (TypeScript), NodeJS (TypeScript), Android (Kotlin), AWS DynamoDB, AWS S3, AWS Lambda, etc\",\r\n        period: \"2018.07~\",\r\n        link: [\"https://piu.nira.one\",\r\n                \"https://play.google.com/store/apps/details?id=one.nira.piu\",\r\n                \"https://github.com/prunusnira/piumanager\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>리듬게임 Pump It Up의 개인 기록 관리를 자동화 한 웹 서비스</li>\r\n                    <li>유저들이 수동적으로 이미지를 수정하면서 사용하고 있는 서열표를 보고 자동화하면 어떨까 하는 생각으로 제작</li>\r\n                    <li>GitHub에서 PR을 받아 새로운 번역을 추가하기도 했음</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`Backend<br/>\r\n                <ul>\r\n                    <li>1세대: NodeJS, NGINX, MariaDB</li>\r\n                    <li>2세대: AWS Lambda, AWS S3, MariaDB</li>\r\n                </ul>\r\n                Front<br/>\r\n                <ul>\r\n                    <li>ReactJS, TypeScript</li>\r\n                </ul>\r\n                데이터\r\n                <ul>\r\n                    <li>패턴 데이터는 DB에서 관리하지만 개인 기록을 저장하는 데이터는 urlencoded 된 내용을 CSV 파일로 제공</li>\r\n                    <li>Kotlin을 사용해 WebView를 응용한 하이브리드 앱을 개발하여 PlayStore에 게시 (앱은 CSV파일을 내부적으로 관리함)</li>\r\n                </ul>\r\n                `,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/piu/01.jpg\", \"/project/piu/02.png\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/rhythm/icon.png\",\r\n        title: {\r\n            \"ko\":\"RhythmTracers (BMS Player)\",\r\n            \"jp\":\"RhythmTracers (BMS Player)\",\r\n            \"en\":\"RhythmTracers (BMS Player)\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"Unity로 제작된 BMS 구동기 (리듬게임)\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Unity3D (Windows)\",\r\n        tech: \"Unity3D\",\r\n        period: \"2020.08~\",\r\n        link: [\"https://youtu.be/lWQG4gIjGDM\",\r\n                \"https://github.com/prunusnira/rhythmspaceV2\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>Unity3D로 개발된 건반형 리듬게임</li>\r\n                    <li>BMS(Be-Music Script)를 읽어 게임을 진행</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                    <li>C# 기반의 BMS 처리 모듈을 제작<br/>\r\n                    (BMS에 대한 파싱, 노트 오브젝트 생성, 시간에 따른 노트 이동 등)</li>\r\n                    <li>플레이 시작 시간을 기준으로 곡의 재생 시간에 맞추어 노트 위치를 변경시키는 방식으로 구현</li>\r\n                    <li>외부에서 읽어들인 BMS의 목록은 SQLite로 관리</li>\r\n                    <li>사용자들이 만든 커스텀 스킨을 적용할 수 있는 시스템 제공</li>\r\n                    <li>싱크 조절이나 최대 프레임 레이트 등 역시 자유롭게 조절할 수 있게 만듦</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/rhythm/01.png\", \"/project/rhythm/02.png\",\r\n            \"/project/rhythm/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/launcher/icon.png\",\r\n        title: {\r\n            \"ko\":\"Drawing Launcher\",\r\n            \"jp\":\"Drawing Launcher\",\r\n            \"en\":\"Drawing Launcher\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"사용자의 제스처로 앱을 실행하는 안드로이드 런처\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Android\",\r\n        tech: \"Android (Java)\",\r\n        period: \"2016.08~2017.04\",\r\n        link: [\"https://play.google.com/store/apps/details?id=com.roxyeris.drawinglauncher\",\r\n                \"https://github.com/prunusnira/DrawingLauncher\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>화면에 제스처를 그려서 앱을 실행하거나 다른 동작을 수행하는 안드로이드 런처</li>\r\n                    <li>단순히 제스처 외에도 일반적인 앱 서랍 기능도 포함</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                <li>Android의 API로 제공되는 Gesture, Gesture Store를 사용하여 개발</li>\r\n                <li>Gesture는 Gesture Store에 포함되어 로컬 파일로 저장</li>\r\n                <li>앱 서랍은 GridLayout으로 표현하며 옵션에서 사이즈 변경이 가능</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/launcher/01.jpg\", \"/project/launcher/02.jpg\",\r\n            \"/project/launcher/03.jpg\", \"/project/launcher/04.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/ringtone/icon.png\",\r\n        title: {\r\n            \"ko\":\"Ringtone Randomizer\",\r\n            \"jp\":\"Ringtone Manager\",\r\n            \"en\":\"Ringtone Manager\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"구 안드로이드에서 사용된 벨소리 랜덤 재생 어플\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Android (Under 7)\",\r\n        tech: \"Android (Java), SQLite\",\r\n        period: \"2011~2012 / 2015\",\r\n        link: [\"https://play.google.com/store/apps/details?id=com.ring.roxyeris\",\r\n                \"https://github.com/prunusnira/ringtone-public\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>기기의 전화가 한 번 올 때마다 벨소리를 랜덤으로 바꿔주는 앱</li>\r\n                    <li>착신 상태를 확인하여 상태 변경에 따라 시스템 옵션을 변경</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                    <li>Android 내부의 Telephony Manager, Phone State Listener로 착신 상태 확인</li>\r\n                    <li>SQLite에 사용자가 벨소리로 지정하고 싶어하는 음악 파일을 등록 및 관리</li>\r\n                    <li>착신 상태가 변경될 때 마다 백그라운드 서비스로 벨소리를 변경하도록 처리</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        image: [\r\n            \"/project/ringtone/01.jpg\", \"/project/ringtone/02.jpg\",\r\n            \"/project/ringtone/03.jpg\", \"/project/ringtone/04.jpg\",\r\n            \"/project/ringtone/05.jpg\"\r\n        ]\r\n    }\r\n];\r\n\r\nexport default projPersonal;","const projNonPersonal = [\r\n    {\r\n        icon: \"/project/chatbot/icon.png\",\r\n        title: {\r\n            \"ko\":\"UniBot (인증서 채팅봇)\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"인증서에 대한 사용자들의 질문에 대해 답변을 자동으로 수행해주는 채팅봇\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web, Android\",\r\n        tech: \"Android (Kotlin), ReactJS (TypeScript), Bootstrap, NGINX, Spring Boot, MariaDB\",\r\n        period: \"2019.10-2020.02\",\r\n        link: [\"https://chatapp.crosscert.com\"],\r\n                //\"https://play.google.com/store/apps/details?id=com.crosscert.aichat\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>인증서 서비스 사용자들에게 필요한 사용법, 질문에 대한 답변을 채팅봇으로 만든 서비스</li>\r\n                    <li>사용자들은 안드로이드 앱 혹은 PC 브라우저로 채팅봇에 접속하여 앱을 사용할 수 있었음</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[ 담당파트: 프론트엔드, ChatScript와 연결하는 중간서버, 안드로이드 앱, DB설계 ]</b>\r\n                <ul>\r\n                    <li>프론트엔드: ReactJS (TypeScript), Bootstrap (Reactstrap) 사용</li>\r\n                    <li>안드로이드: Kotlin으로 개발, WebView를 사용한 하이브리드 앱</li>\r\n                    <li>중간서버: SpringBoot(Kotlin)으로 개발, 백엔드 파트와 연동을 위해 구현. ChatScript와 통신을 위한 REST API 구축</li>\r\n                    <li>시스템 구성: NGINX위에 Reversed Proxy를 사용해 백엔드와 프론트엔드를 모두 구동</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/chatbot/01.jpg\", \"/project/chatbot/02.jpg\",\r\n            \"/project/chatbot/03.jpg\", \"/project/chatbot/04.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/backup/icon.png\",\r\n        title: {\r\n            \"ko\":\"인증서 클라우드 백업 서비스\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"브라우저 내부 저장소의 인증서를 백업하여 다른 기기에서 쓸 수 있게 해주는 서비스\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"Spring Boot 2 (Java), PostgreSQL\",\r\n        period: \"2019.12-2020.05\",\r\n        link: [],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>브라우저 내부 저장소에 저장되어있는 인증서를 서버에 백업하여 브라우저/기기에 상관없이 인증서를 사용할 수 있게 하는 서비스</li>\r\n                    <li>클라이언트는 기존 개발되어있는 가입자 소프트웨어를 확장하여 클라이언트를 만듦</li>\r\n                    <li>서버는 Spring Boot와 PostgreSQL을 사용하여 신규 제작</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[ 담당파트: 서버 및 DB ]</b>\r\n                <ul>\r\n                    <li>클라이언트와의 통신을 위해 RESTful API 형태로 개발</li>\r\n                    <li>HSM을 연동하여 보안성을 높임 (PKCS11 Provider)</li>\r\n                    <li>외부의 SMS 모듈을 사용한 SMS 인증 제공</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/backup/01.png\", \"/project/backup/02.jpg\", \"/project/backup/03.png\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/aicore/icon.png\",\r\n        title: {\r\n            \"ko\":\"AI 플랫폼 개발 및 채팅봇 개발\",\r\n            \"jp\":\"AIプラットフォーム\",\r\n            \"en\":\"AI Platform Development\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"AI Agent간 데이터 전송 개발, AI 플랫폼을 활용한 채팅봇 서비스 개발\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Java, Web\",\r\n        tech: \"Java, JavaScript, Tomcat 8, jQuery, HTML, Bootstrap\",\r\n        period: \"2015.5~2016.8\",\r\n        link: [\"https://aibrain.com/solutions/aicore-adaptive-interactive-cognitive-reasoning-engine/\"],\r\n        content: {\r\n            \"ko\":`대화 가능한 AI를 만들기 위한 자연언어 처리 프로젝트에 통신 모듈 개발로 참가<br/><br/>\r\n            (1) IAC(Inter-Agent Communication)\r\n            <ul>\r\n                <li>Planner에서 다른 에이전트로의 데이터 전송을 요청받음</li>\r\n                <li>JADE Framework에서 FIPA-ACL 메시지 구조에 맞는 통신용 메시지를 작성 및 전송</li>\r\n            </ul>\r\n            (2) AI 플랫폼을 활용한 채팅봇 개발\r\n            <ul>\r\n                <li>상기 플랫폼을 사용하여 클라이언트와 서버가 자연어로 대화를 주고받을 수 있는 채팅봇 서비스를 개발</li>\r\n                <li>TTS로 채팅 내용을 읽어주고 및 마이크를 사용해 말을 전달 할 수 있도록 개발</li>\r\n                <li>Vanilla JS로 개발하였으며 1년간 회사 홈페이지에서 서비스</li>\r\n            </ul>\r\n            * JADE Framework: Java로 작성된 Multi-Agent System 개발을 위한 프레임워크<br/>\r\n            * ACL: Agent Communication Language`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ 채팅봇 관련 ]\r\n                <ul>\r\n                    <li>Tomcat에 Natural Language Processing 엔진을 수정하여 구동</li>\r\n                    <li>TTS에는 Speech Synthesis API를 사용하여 개발</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/aicore/01.jpg\", \"/project/aicore/02.jpg\",\r\n            \"/project/aicore/03.jpg\", \"/project/aicore/04.jpg\",\r\n            \"/project/aicore/05.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/aigame/icon.png\",\r\n        title: {\r\n            \"ko\":\"AI 플랫폼을 활용한 데모 게임 개발\",\r\n            \"jp\":\"AIゲーム開発\",\r\n            \"en\":\"AI Game Development\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"NPC가 게임의 환경을 이해하고 다음 동작을 결정해 행동하는 데모 게임 개발\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Unity\",\r\n        tech: \"Java, C#, Spring Framework, Unity3D, MariaDB\",\r\n        period: \"2016.8~2017.2\",\r\n        link: [\"https://aibrain.com/products/futurable-true-ai-game/\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>회사가 보유한 AI 기술을 활용하여 데모 게임 개발을 진행</li>\r\n                    <li>NPC는 게임의 환경을 확인하여 현재 자신의 상태와 조건을 확인</li>\r\n                    <li>NPC의 다음 동작은 이러한 상태를 사용한 추론 결과에 따라 진행됨</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`(1) 클라이언트 (C#)\r\n            <ul>\r\n                <li>Google Play Service 연동, 서버 통신, UI, 디버깅</li>\r\n            </ul>\r\n            (2) 서버 (Java/Spring)\r\n            <ul>\r\n                <li>회사에서 제작한 AI 플랫폼을 서버에서 구동</li>\r\n                <li>유저별 대화내용 보존 및 대화 시스템 구성 및 개발</li>\r\n                <li>클라이언트와 서버간의 요청과 응답은 API 형태로 제작</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/aigame/01.jpg\", \"/project/aigame/02.jpg\",\r\n            \"/project/aigame/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/fautonomy/icon.png\",\r\n        title: {\r\n            \"ko\":\"AI 게임 개발 플러그인\",\r\n            \"jp\":\"AIゲームプラグイン開発\",\r\n            \"en\":\"AI Game Plugin Development\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Unity\",\r\n        tech: \"Java, C#, Spring Framework, Unity3D\",\r\n        period: \"2017~2019\",\r\n        link: [\"https://aibrain.com/products/futurable-true-ai-game/\",\r\n                \"https://assetstore.unity.com/packages/tools/ai/fautonomy-105444\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>AI 게임에 사용된 기술을 사용하여 Unity 개발자가 사용할 수 있는 플러그인을 제작</li>\r\n                    <li>개발자는 게임내의 환경 상황, 캐릭터의 시야나 인지에 대한 설정, 캐릭터가 수행하는 동작에 대한 조건 등을 플러그인에 입력</li>\r\n                    <li>사용자가 지정한 조건을 서버로 전송하여 Tensorflow로 학습</li>\r\n                    <li>학습의 결과로 나온 ProtoBuf 파일을 다운로드하여 클라이언트에 적용</li>\r\n                </ul>`,\r\n            \"jp\":``,\r\n            \"en\":``\r\n        },\r\n        dev: {\r\n            \"ko\":`(1) 클라이언트 (C#)\r\n            <ul>\r\n                <li>UI, 서버 통신, 디버그</li>\r\n            </ul>\r\n            (2) 서버 (Java/Spring)\r\n            <ul>\r\n                <li>서버에서 전송한 게임 환경 정보 등을 Process로 Python 코드를 실행하는 방식으로 수행</li>\r\n                <li>Python 코드는 Tensorflow를 실행하기 위한 코드가 들어있음</li>\r\n                <li>다수의 클라이언트에서 동시에 요청이 들어오는 경우 Queue로 관리</li>\r\n                <li>URL로 클라이언트에서 요청을 받고 처리함</li>\r\n            </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/fautonomy/01.jpg\", \"/project/fautonomy/02.jpg\",\r\n            \"/project/fautonomy/03.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/situation/icon.png\",\r\n        title: {\r\n            \"ko\":\"온톨로지 기반의 상황인지 모바일 프레임워크\",\r\n            \"jp\":\"\",\r\n            \"en\":\"Situation aware mobile framework based on ontology\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"논문 내용 증명 개발 지원으로 참여한 프로젝트\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Java, Android\",\r\n        tech: \"Java, OWL, SPARQL, Android, Protege, Apache Jena\",\r\n        period: \"2013\",\r\n        link: [\"https://www.researchgate.net/publication/264428214_Mobile_situation-aware_framework_for_developing_smart_mobile_software\"],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>모바일 환경에서 사용자의 현재 조건에 맞는 콘텐츠를 제공하는 프레임워크</li>\r\n                    <li>증명 지원을 위한 안드로이드 앱 개발과 이미 만들어진 프레임워크의 수정을 담당</li>\r\n                    <li>SCI-E 논문의 제 2저자로 참가</li>\r\n                    <li>* Mobile situation-aware framework for developing smart mobile software, Joonseok Park, Taejun Kang, Keunhyuk Yeom, Journal of Software: Evolution and Process, Vol. 26, Issue 12, 1 Dec 2014</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`[테스트용 음악 재생 어플]\r\n                    <ul>\r\n                        <li>스마트폰의 센서에서 데이터를 수집하고 온톨로지를 사용한 추론을 통해 결과값을 얻음</li>\r\n                        <li>도출된 결과 값을 이용하여 사용자에게 적합한 음악을 추천 및 재생</li>\r\n                    </ul>\r\n                    [프레임워크 수정]\r\n                    <ul>\r\n                        <li>온톨로지를 분석하여 사용자가 설정한 값을 한 번에 확인할 수 있는 트리 구조 생성 및 제공</li>\r\n                    </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/situation/01.jpg\", \"/project/situation/02.jpg\",\r\n            \"/project/situation/03.jpg\", \"/project/situation/04.jpg\"\r\n        ]\r\n    },\r\n    {\r\n        icon: \"/project/bigdata/icon.png\",\r\n        title: {\r\n            \"ko\":\"Big Data 서비스 조합 프레임워크\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        simpledesc: {\r\n            \"ko\":\"빅 데이터의 수집, 가공, 표현을 수행하는 서비스들을 조합하여 하나의 데이터 통계 처리 시스템으로 만들어 주는 프레임워크 개발\",\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        platform: \"Web\",\r\n        tech: \"PHP, JavaScript, jQuery, Apache HTTP Server, JBoss\",\r\n        period: \"2013~2014\",\r\n        link: [],\r\n        content: {\r\n            \"ko\":`<ul>\r\n                    <li>Big Data의 사용을 수집, 처리, 표현의 3가지로 나누어 서비스들을 합쳐 하나의 시스템을 만들어내는 프레임워크</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        dev: {\r\n            \"ko\":`<ul>\r\n                    <li>UML로 시스템 구조 설계에 참여</li>\r\n                    <li>jQuery를 사용하여 UI 일부와 관련 동작을 개발</li>\r\n                </ul>`,\r\n            \"jp\":\"\",\r\n            \"en\":\"\"\r\n        },\r\n        image: [\r\n            \"/project/bigdata/01.jpg\", \"/project/bigdata/02.jpg\"\r\n        ]\r\n    }\r\n];\r\n\r\nexport default projNonPersonal;","class Language {\r\n    static getLang(): string {\r\n        return 'ko'\r\n        /*let lang = navigator.language;// || navigator.systemLanguage;\r\n        if(this.readCookie(\"lang\") !== null &&\r\n            (this.readCookie(\"lang\") === 'ko' || this.readCookie(\"lang\") === 'jp' || this.readCookie(\"lang\") === 'en')\r\n        ) {\r\n            lang = this.readCookie(\"lang\")!;\r\n        }\r\n        else {\r\n            if(lang==='ko' || lang==='ko-kr' || lang==='ko-KR') {\r\n                lang = 'ko';\r\n            }\r\n            else if(lang==='ja' || lang==='ja-jp' || lang==='ja-JP') {\r\n                lang = 'jp';\r\n            }\r\n            else {\r\n                lang = 'en';\r\n            }\r\n        \r\n            this.eraseCookie(\"lang\");\r\n            this.createCookie(\"lang\", lang, 1);\r\n        }\r\n        return lang;*/\r\n    }\r\n\r\n    static changeLang(type: string) {\r\n        this.eraseCookie(\"lang\");\r\n        this.createCookie(\"lang\", type, 1);\r\n        window.location.reload();\r\n    }\r\n\r\n    static createCookie(name: string, value: string, days: number) {\r\n        let expires = \"\";\r\n        if (days) {\r\n            const date = new Date();\r\n            date.setTime(date.getTime()+(days*24*60*60*1000));\r\n            expires = \"; expires=\"+date.toUTCString();\r\n        }\r\n        else expires = \"\";\r\n        document.cookie = name+\"=\"+value+expires+\"; path=/\";\r\n    }\r\n\r\n    static readCookie(name: string) {\r\n        const nameEQ = name + \"=\";\r\n        const ca = document.cookie.split(';');\r\n        for(let i=0;i < ca.length;i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0)===' ') c = c.substring(1,c.length);\r\n            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static eraseCookie(name: string) {\r\n        this.createCookie(name,\"\",-1);\r\n    }\r\n}\r\n\r\nexport default Language;","const textProject = {\r\n    clickToExpand: {\r\n        \"ko\":\"각 항목을 클릭해서 펼쳐보세요\",\r\n        \"jp\":\"\",\r\n        \"en\":\"Click to Expand\"\r\n    },\r\n    platform: {\r\n        \"ko\":\"플랫폼\",\r\n        \"jp\":\"プラットフォーム\",\r\n        \"en\":\"Platform\"\r\n    },\r\n    tech: {\r\n        \"ko\":\"사용 기술\",\r\n        \"jp\":\"スキル\",\r\n        \"en\":\"Skill\"\r\n    },\r\n    period: {\r\n        \"ko\":\"기간\",\r\n        \"jp\":\"開発期間\",\r\n        \"en\":\"Period\"\r\n    },\r\n    dev: {\r\n        \"ko\":\"개발\",\r\n        \"jp\":\"開発内容\",\r\n        \"en\":\"Development\"\r\n    }\r\n};\r\n\r\nexport default textProject;","import React, { useState } from \"react\"\r\nimport ProjectItem from \"../../data/projectItem\"\r\nimport { BodyContent, ItemCol, ItemRow } from \"../../styled/styledCommon\"\r\nimport textProject from \"../../text/project\"\r\nimport Language from \"../../tool/language\"\r\n\r\ninterface Props {\r\n    item: ProjectItem\r\n}\r\n\r\nconst ProjectListObject = (props: Props) => {\r\n    const [isOpen, setOpen] = useState(false)\r\n    const lang = Language.getLang()\r\n\r\n    const changeOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ItemRow className=\"projobj-overall text\">\r\n                <ItemCol size={10}>\r\n                    <ItemRow onClick={changeOpen} keepDirHor={true}>\r\n                        <ItemCol size={2} className=\"text-center\">\r\n                            <img\r\n                                alt=\"icon\"\r\n                                className=\"projobj-icon\"\r\n                                src={`${process.env.PUBLIC_URL}/img${props.item.icon}`} />\r\n                        </ItemCol>\r\n                        <ItemCol size={8}>\r\n                            <ItemRow keepDirHor={true}>\r\n                                <ItemCol size={8} className=\"lv3\">\r\n                                    {props.item.title}\r\n                                </ItemCol>\r\n                                <ItemCol size={2} className=\"lv4\">\r\n                                    {props.item.platform}\r\n                                </ItemCol>\r\n                            </ItemRow>\r\n                            <ItemRow>\r\n                                {props.item.simpledesc}\r\n                            </ItemRow>\r\n                        </ItemCol>\r\n                    </ItemRow>\r\n                    <BodyContent\r\n                        className=\"projcard\"\r\n                        style={\r\n                            isOpen?\r\n                            {\r\n                                display: \"block\"\r\n                            }\r\n                            :\r\n                            {\r\n                                display: \"none\"\r\n                            }\r\n                        }>\r\n                        <ItemRow className=\"paragraph\">\r\n                            <ItemCol size={5} className=\"text\">\r\n                                <b>{(textProject.platform as any)[lang]}</b><br/>\r\n                                <span className=\"lv4\">{props.item.platform}</span>\r\n                            </ItemCol>\r\n                            <ItemCol size={5} className=\"text\">\r\n                                <b>{(textProject.period as any)[lang]}</b><br/>\r\n                                <span className=\"lv4\">{props.item.period}</span>\r\n                            </ItemCol>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"paragraph\">\r\n                            <ItemCol className=\"text\">\r\n                                <b>{(textProject.tech as any)[lang]}</b><br/>\r\n                                <span className=\"lv4\">{props.item.tech}</span>\r\n                            </ItemCol>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"paragraph\">\r\n                            <ItemCol className=\"text\">\r\n                                {\r\n                                    props.item.link.map((v, i) => {\r\n                                        return (\r\n                                            <>\r\n                                                <b>Link {i+1}</b>\r\n                                                &nbsp;\r\n                                                <span className=\"lv4\">\r\n                                                    <a\r\n                                                        key=\"link1\"\r\n                                                        target=\"_blank\"\r\n                                                        rel=\"noopener noreferrer\"\r\n                                                        href={v}>\r\n                                                        {v}\r\n                                                    </a>\r\n                                                </span><br/>\r\n                                            </>)\r\n                                    })\r\n                                }\r\n                            </ItemCol>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"paragraph\">\r\n                            <ItemCol className=\"text\">\r\n                                <span className=\"lv4\" dangerouslySetInnerHTML={{__html: props.item.content}}></span>\r\n                            </ItemCol>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"paragraph\">\r\n                            <ItemCol className=\"text\">\r\n                                <b>{(textProject.dev as any)[lang]}</b><br/>\r\n                                <span className=\"lv4\" dangerouslySetInnerHTML={{__html: props.item.dev}}></span>\r\n                            </ItemCol>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"paragraph\">\r\n                            <ItemCol className=\"text\">\r\n                                <b>Images</b><br/>\r\n                                <span className=\"lv4\">Click to open in the new tab</span><br/>\r\n                                <span className=\"lv4\">\r\n                                    {\r\n                                        props.item.image.map((e) => {\r\n                                            const imgUrl = process.env.PUBLIC_URL+\"/img\"+e;\r\n                                            return (\r\n                                                <a\r\n                                                    key={e}\r\n                                                    target=\"_blank\"\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                    href={imgUrl}>\r\n                                                    <img alt=\"\" className=\"projobj-image\" src={imgUrl}/>\r\n                                                </a>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </span>\r\n                            </ItemCol>\r\n                        </ItemRow>\r\n                        <ItemRow onClick={changeOpen}>\r\n                            <ItemCol size={10} className=\"text-center\">\r\n                                <a href=\"#no_div\">▲ CLOSE ▲</a>\r\n                            </ItemCol>\r\n                        </ItemRow>\r\n                    </BodyContent>\r\n                </ItemCol>\r\n            </ItemRow>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectListObject","import React from \"react\"\r\nimport ProjectItem from \"../../data/projectItem\"\r\nimport ProjectListObject from \"./projectListObject\"\r\n\r\ninterface Props {\r\n    list: Array<ProjectItem>\r\n}\r\n\r\nconst ProjectListWrapper = (props: Props) => {\r\n    return (\r\n        <>\r\n        {\r\n            props.list.map(v => {\r\n                return <ProjectListObject item={v} />\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectListWrapper","import React, {useEffect, useState} from 'react'\r\n\r\nimport ProjectItem from '../../data/projectItem'\r\n\r\nimport projPersonal from '../../data/projPersonal'\r\nimport projNonPersonal from '../../data/projNonPersonal'\r\n\r\nimport Language from '../../tool/language'\r\nimport ReactWOW from 'react-wow'\r\n\r\nimport './project.scss'\r\nimport ProjectListWrapper from './projectListWrapper'\r\nimport textProject from '../../text/project'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { Container, ItemCol, ItemRow } from '../../styled/styledCommon'\r\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\r\n\r\nconst ProjectPage = () => {\r\n    const [catName, setCatName] = useState('')\r\n    const [catSize, setCatSize] = useState(0)\r\n    const [catList, setCatList] = useState(new Array<ProjectItem>())\r\n    const [ppList, setPPList] = useState(new Array<ProjectItem>())\r\n    const [npList, setNPList] = useState(new Array<ProjectItem>())\r\n    const [catCurNum, setCatNum] = useState(0)\r\n    const [catPage, setCatPage] = useState(0)\r\n\r\n    const lang: string = Language.getLang();\r\n\r\n    useEffect(() => {\r\n        loadProjectList(\"projPersonal\")\r\n    }, [])\r\n\r\n    // 리스트를 현재 선택한 것만으로 변경함\r\n    const loadProjectList = (moduleName: string) => {\r\n        // 작업 전에 현재 페이지 번호를 초기화\r\n        setCatNum(0);\r\n\r\n        let m = null;\r\n        switch(moduleName) {\r\n            case \"projPersonal\":\r\n                m = projPersonal\r\n                break\r\n            case \"projNonPersonal\":\r\n                m = projNonPersonal\r\n                break\r\n        }\r\n\r\n        if(m != null) {\r\n            const size = m.length\r\n            const plist = Array<ProjectItem>()\r\n            const nlist = Array<ProjectItem>()\r\n\r\n            projPersonal.forEach(e => {\r\n                plist.push(generateItemObject(e))\r\n            })\r\n            projNonPersonal.forEach(e => {\r\n                nlist.push(generateItemObject(e))\r\n            })\r\n\r\n            setCatName(moduleName)\r\n            setCatSize(size)\r\n            setPPList(plist)\r\n            setNPList(nlist)\r\n        }\r\n    }\r\n\r\n    const generateItemObject = (e: any) => {\r\n        return new ProjectItem(\r\n            e.icon,\r\n            (e.title as any)[lang],\r\n            (e.simpledesc as any)[lang],\r\n            e.platform,\r\n            e.tech,\r\n            e.period,\r\n            e.link,\r\n            (e.content as any)[lang],\r\n            (e.dev as any)[lang],\r\n            e.image)\r\n    }\r\n\r\n    const moveProject = (idx: number) => {\r\n        let nextidx: number\r\n\r\n        if(idx > catSize - 1) nextidx = catSize - 1\r\n        else if(idx < 0) nextidx = 0\r\n        else nextidx = idx\r\n\r\n        setCatNum(nextidx)\r\n    }\r\n\r\n    return (\r\n        <Container className='bgcolor'>\r\n            <ItemRow className=\"h100\" id=\"works\">\r\n                <ItemCol size={10}>\r\n                    <ItemRow className=\"paragraph\">\r\n                        <ReactWOW animation=\"slideInLeft\">\r\n                            <ItemCol className=\"text text-left\" size={10}>\r\n                                <span className=\"lv2\">\r\n                                    <FontAwesomeIcon icon={faAngleDoubleRight} />&nbsp;\r\n                                    Project\r\n                                </span><br/>\r\n                                <span className=\"lv4\">\r\n                                    {(textProject.clickToExpand as any)[lang]}\r\n                                </span>\r\n                            </ItemCol>\r\n                        </ReactWOW>\r\n                    </ItemRow>\r\n\r\n                    <ItemRow>\r\n                        <ReactWOW animation=\"slideInLeft\">\r\n                            <ItemCol size={10}>\r\n                                <Nav tabs>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            className={(catPage === 0 ? \"active\":\"\")}\r\n                                            onClick={() => {\r\n                                                setCatPage(0)\r\n                                        }}>\r\n                                            Personal Work\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            className={(catPage === 1 ? \"active\":\"\")}\r\n                                            onClick={() => {\r\n                                                setCatPage(1)\r\n                                        }}>\r\n                                            Non-Personal Work\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                                <TabContent activeTab={catPage}>\r\n                                    <TabPane tabId={0}>\r\n                                        <ProjectListWrapper list={ppList}/>\r\n                                    </TabPane>\r\n                                    <TabPane tabId={1}>\r\n                                        <ProjectListWrapper list={npList}/>\r\n                                    </TabPane>\r\n                                </TabContent>\r\n                            </ItemCol>\r\n                        </ReactWOW>\r\n                    </ItemRow>\r\n                </ItemCol>\r\n            </ItemRow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProjectPage","import { faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport ReactWOW from \"react-wow\";\r\nimport { Container, ItemCol, ItemRow } from \"../../styled/styledCommon\";\r\nimport \"./link.scss\";\r\n\r\nconst Link = () => {\r\n    return (\r\n        <Container className='bgcolor' id=\"link\">\r\n            <ItemRow className=\"paragraph\">\r\n                <ReactWOW animation=\"slideInLeft\">\r\n                    <ItemCol className=\"text text-left\" size={10}>\r\n                        <span className=\"lv2\">\r\n                            <FontAwesomeIcon icon={faAngleDoubleRight} />&nbsp;\r\n                            Links\r\n                        </span>\r\n                    </ItemCol>\r\n                </ReactWOW>\r\n            </ItemRow>\r\n            <ItemRow className=\"paragraph\">\r\n                <ReactWOW animation=\"slideInLeft\">\r\n                    <ItemCol className=\"text\">\r\n                        <ItemRow className=\"linktext lv3\">\r\n                            <b>- Blog</b>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"linkpadding lv4\">\r\n                            <a\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                href=\"https://arincblossom.wordpress.com\">\r\n                                    https://arincblossom.wordpress.com\r\n                            </a>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"linktext lv3\">\r\n                            <b>- GitHub</b>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"linkpadding lv4\">\r\n                            <a\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                href=\"https://github.com/prunusnira\">\r\n                                    https://github.com/prunusnira\r\n                            </a>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"linktext lv3\">\r\n                            <b>- Skill Navigator</b>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"linkpadding lv4\">\r\n                            <a\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                href=\"https://sin.nira.one\">\r\n                                    https://sin.nira.one\r\n                            </a>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"linktext lv3\">\r\n                            <b>- PIU Clear Manager</b>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"linkpadding lv4\">\r\n                            <a\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                href=\"https://piu.nira.one\">\r\n                                    https://piu.nira.one\r\n                            </a>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"linktext lv3\">\r\n                            <b>- Twitch BanPicker (Twitch login needed)</b>\r\n                        </ItemRow>\r\n                        <ItemRow className=\"linkpadding lv4\">\r\n                            <a\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                href=\"https://banpick.nira.one\">\r\n                                    https://banpick.nira.one\r\n                            </a>\r\n                        </ItemRow>\r\n                    </ItemCol>\r\n                </ReactWOW>\r\n            </ItemRow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Link","import { TechStackWrap } from \"./TechStackWrap\";\r\n\r\nconst techStackData: TechStackWrap[] = [\r\n    {\r\n        title: \"Web\",\r\n        cont: [\r\n            {\r\n                title: \"Frontend\",\r\n                cont: [\r\n                    { img: \"/img/about/js.png\", name: \"JavaScript\", desc: \"ES6 문법 사용\" },\r\n                    { img: \"/img/about/ts.png\", name: \"TypeScript\", desc: \"최근 프로젝트 전반에 사용\" },\r\n                    { img: \"/img/about/html.png\", name: \"HTML\", desc: \"마크업을 사용한 화면 표시\" },\r\n                    { img: \"/img/about/css.png\", name: \"CSS\", desc: \"Flexbox 활용\" },\r\n                    { img: \"/img/about/react.png\", name: \"ReactJS\", desc: \"Class/Hook 사용, Mobx/Redux 상태관리\" },\r\n                    { img: \"/img/about/bootstrap.png\", name: \"Bootstrap\", desc: \"빠른 UI 구성을 위해 사용\" },\r\n                    { img: \"/img/about/styledcomp.png\", name: \"styled-components\", desc: \"자체적 UI 구성이 필요한 프로젝트에서 사용\" }\r\n                ]\r\n            },\r\n            {\r\n                title: \"Backend\",\r\n                cont: [\r\n                    { img: \"/img/about/java.png\", name: \"Java\", desc: \"Spring 개발 시 사용\" },\r\n                    { img: \"/img/about/kotlin.png\", name: \"Kotlin\", desc: \"Java 대신 사용, Java 대비 간결해진 문법, null safety\" },\r\n                    { img: \"/img/about/spring.png\", name: \"Spring\", desc: \"REST API, 웹 서비스 등 개발 경험\" },\r\n                    { img: \"/img/about/aws.png\", name: \"AWS\", desc: \"(개인프로젝트) S3, Lambda, CloudFront, API Gateway, Lightsail\" },\r\n                    { img: \"/img/about/nginx.png\", name: \"NGINX\", desc: \"쉬운 서버 구축, 프록시 활용\" },\r\n                    { img: \"/img/about/letsencrypt.png\", name: \"CertBot\", desc: \"무료로 SSL 구성 시 사용\" }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"DB\",\r\n        cont: [\r\n            {\r\n                title: \"Tried\",\r\n                cont: [\r\n                    { img: \"/img/about/mysql.png\", name: \"MySQL\", desc: \"업무/개인 포함 가장 많이 사용한 RDB\" },\r\n                    { img: \"/img/about/mariadb.png\", name: \"MariaDB\", desc: \"업무/개인 포함 가장 많이 사용한 RDB\" },\r\n                    { img: \"/img/about/sqlite.png\", name: \"SQLite\", desc: \"안드로이드나 게임 등에서 간단한 DB를 위해 사용\" },\r\n                    { img: \"/img/about/postgresql.png\", name: \"PostgreSQL\", desc: \"업무에서 1회 사용 경험\" },\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Android\",\r\n        cont: [\r\n            {\r\n                title: \"Language\",\r\n                cont: [\r\n                    { img: \"/img/about/java.png\", name: \"Java\", desc: \"학부때부터 써온 언어\" },\r\n                    { img: \"/img/about/kotlin.png\", name: \"Kotlin\", desc: \"사실 안드로이드 때문에 Kotlin을 처음 접함\" }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Unity3D\",\r\n        cont: [\r\n            {\r\n                title: \"Language\",\r\n                cont: [\r\n                    { img: \"/img/about/csharp.png\", name: \"C#\", desc: \"업무에서 처음 접한 후 개인 프로젝트에서도 계속 활용\" }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"etc\",\r\n        cont: [\r\n            {\r\n                title: \"Version Management\",\r\n                cont: [\r\n                    { img: \"/img/about/github.png\", name: \"GitHub\", desc: \"개인 프로젝트 관리\" },\r\n                    { img: \"/img/about/gitlab.png\", name: \"GitLab\", desc: \"업무에서 사용\" },\r\n                    { img: \"/img/about/bitbucket.png\", name: \"BitBucket\", desc: \"이전에 사용했으나 GitHub에 Private이 생긴 뒤 사용하지 않음\" }\r\n                ]\r\n            },\r\n            {\r\n                title: \"UML\",\r\n                cont: [\r\n                    { img: \"/img/about/ea.png\", name: \"Enterprise Architect\", desc: \"대학원 연구실에서 사용한 UML 프로그램\" },\r\n                    { img: \"/img/about/visualparadigm.png\", name: \"Visual Paradigm\", desc: \"대학원 연구실에서 사용한 UML 프로그램 2\" },\r\n                    { img: \"/img/about/staruml.png\", name: \"StarUML\", desc: \"1은 무료지만 2는 유료인 UML 프로그램\" }\r\n                ]\r\n            },\r\n            {\r\n                title: \"Documentation\",\r\n                cont: [\r\n                    { img: \"/img/about/msoffice.png\", name: \"MS Office\", desc: \"Word, PowerPoint, Excel 사용, Google Docs도 가능\" }\r\n                ]\r\n            },\r\n            {\r\n                title: \"Design\",\r\n                cont: [\r\n                    { img: \"/img/about/photoshop.png\", name: \"Photoshop\", desc: \"기본적인 사용 레벨, 유튜브 썸네일 정도의 작업은 가능\" }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default techStackData;","import React from \"react\"\r\nimport { ItemCol, ItemRow } from \"../../styled/styledCommon\"\r\n\r\ninterface Props {\r\n    icon: string,\r\n    name: string,\r\n    desc: string\r\n}\r\n\r\nconst TechStackItem = (props: Props) => {\r\n    return (\r\n        <ItemRow keepDirHor={true}>\r\n            <ItemCol size={3}>\r\n                {\r\n                    (function() {\r\n                        if(props.icon !== '#none') {\r\n                            return (\r\n                                <img\r\n                                    alt=\"icon\"\r\n                                    height=\"48px\"\r\n                                    src={`${process.env.PUBLIC_URL}${props.icon}`} />\r\n                            )\r\n                        }\r\n                    })()\r\n                }\r\n            </ItemCol>\r\n            <ItemCol className='text' size={7}>\r\n                <ItemRow>\r\n                    {props.name}\r\n                </ItemRow>\r\n                <ItemRow className='lv5 text-left'>\r\n                    {props.desc}\r\n                </ItemRow>\r\n            </ItemCol>\r\n        </ItemRow>\r\n    )\r\n}\r\n\r\nexport default TechStackItem","import React, {Component, Fragment} from 'react';\r\nimport { Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\r\nimport { TechStackInner } from '../../data/TechStackInner';\r\nimport \"./tech.css\";\r\nimport TechStackItem from './techStackItem';\r\n\r\ninterface Props {\r\n    title: string,\r\n    cont: TechStackInner[]\r\n}\r\n\r\nconst TechStackCard: React.FC<Props> = ({title, cont}) => {\r\n    return (\r\n        <Card className=\"text techcard\" style={{width: '100%'}}>\r\n            <CardHeader className=\"lv3 cardheader\">\r\n                {title}\r\n            </CardHeader>\r\n            <CardBody className=\"cardbody\">\r\n                {\r\n                    cont.map(v => {\r\n                        return (\r\n                        <Fragment>\r\n                            <span className=\"lv4\"><b>{v.title}</b></span><br/>\r\n                            <Row>\r\n                                {\r\n                                    v.cont.map(x => {\r\n                                        return (\r\n                                            <Col xs=\"6\" md=\"4\" lg=\"3\" className=\"text-center\">\r\n                                                <TechStackItem\r\n                                                    icon={x.img}\r\n                                                    name={x.name}\r\n                                                    desc={x.desc}\r\n                                                />\r\n                                            </Col>)\r\n                                    })\r\n                                }\r\n                            </Row>\r\n                        </Fragment>)\r\n                    })\r\n                }\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default TechStackCard;","import { faAngleDoubleRight, faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React from \"react\"\r\nimport ReactWOW from \"react-wow\"\r\nimport techStackData from \"../../data/techStackData\"\r\nimport { Container, ItemCol, ItemRow } from \"../../styled/styledCommon\"\r\nimport textAbout from \"../../text/about\"\r\nimport Language from \"../../tool/language\"\r\nimport TechStackCard from \"./techStackCard\"\r\n\r\nconst TechStack = () => {\r\n\r\n    const lang: string = Language.getLang();\r\n\r\n    return (\r\n        <Container className='bgcolor' id=\"profile\">\r\n            <ItemRow className=\"paragraph\">\r\n                <ReactWOW\r\n                    key=\"profile1\"\r\n                    animation=\"slideInLeft\">\r\n                    <ItemCol className=\"text text-left\" size={10}>\r\n                        <span className=\"lv2\">\r\n                            <FontAwesomeIcon icon={faAngleDoubleRight} />&nbsp;\r\n                            Tech Stack\r\n                        </span>\r\n                    </ItemCol>\r\n                </ReactWOW>\r\n            </ItemRow>\r\n            <ItemRow className=\"paragraph\">\r\n                <ReactWOW\r\n                    key=\"profile3\"\r\n                    animation=\"slideInLeft\">\r\n                    <ItemCol className=\"text\" size={10}>\r\n                        <span className=\"lv3\">\r\n                            <FontAwesomeIcon icon={faAngleRight} />&nbsp;\r\n                            {(textAbout.para2t as any)[lang]}\r\n                        </span><br/>\r\n                        <span className=\"lv4\">{(textAbout.para2c as any)[lang]}</span>\r\n                    </ItemCol>\r\n                </ReactWOW>\r\n            </ItemRow>\r\n            {\r\n                techStackData.map((d, i) => {\r\n                    return (\r\n                        <ItemRow className=\"paragraph\">\r\n                            <TechStackCard\r\n                                title={d.title}\r\n                                cont={d.cont}\r\n                            />\r\n                        </ItemRow>\r\n                    )\r\n                })\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TechStack","import React from 'react'\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\n\r\nimport Landing from './landing/landing'\r\nimport FixedTop from './fixedTop'\r\nimport FixedBottom from './fixedBottom'\r\nimport About from './about/about'\r\nimport ProjectPage from './project/project'\r\nimport Link from './link/link'\r\nimport TechStack from './techStack/techStack'\r\nimport { Center, OuterBox } from '../styled/styledOverall'\r\n\r\nconst Index = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <OuterBox className='bgcolor'>\r\n                <FixedTop />\r\n                <Center>\r\n                    <Route exact path='/' component={Landing} />\r\n                    <Route path='/about' component={About} />\r\n                    <Route path='/tech' component={TechStack} />\r\n                    <Route path='/project' component={ProjectPage} />\r\n                    <Route path='/link' component={Link} />\r\n                </Center>\r\n                <FixedBottom />\r\n            </OuterBox>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Index;","import React from 'react';\nimport Index from './page/index';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './App.scss';\nimport 'animate.css';\n\nconst App: React.FC = () => {\n  return (\n    <Index />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}